{"version":3,"sources":["Analytics.js","RegionTable.js","SeriesChart.js","CovidData.js","MyLink.js","App.js","serviceWorker.js","index.js"],"names":["Analytics","enabled","selectCount","counts","hideshow_dataset_click","date_slider_click","linlog_click","arrow_click","this","event","category","label","gtag","event_category","event_label","transport_type","url","reportEvent","name","count","eventName","countableEvent","instance","slimStyle","height","padding","buttonsStyle","position","left","fontSize","regionTableStyle","maxHeight","marginLeft","marginRight","borderRadius","RegionTable","props","selectedIndex","style","Object","assign","backgroundColor","state","selection","list","createSortedList","sortBy","sortAscending","handleCellClick","bind","select","handleNextClick","handlePrevClick","toggleSort","selectedRef","React","createRef","tableContainerRef","array","property","numeric","ascending","newArray","i","length","push","sort","a","b","setState","onSelected","e","itemSelected","title","index","findSelectedIndex","arrowClicked","sortArray","container","current","row","containerVisibleHeight","scrollHeight","scrollTopMax","offsetTop","offsetHeight","scrollTop","scrollIntoView","scrollBy","prevProps","prevState","snapshot","listChanged","listsEqual","ensureSelectionVisible","Link","href","onClick","TableContainer","ref","Table","stickyHeader","size","TableHead","TableRow","TableCell","align","TableBody","map","item","selected","key","itemClick","cases","Component","linLogStyle","top","checkboxesStyle","containerStyle","radioStyle","sliderStyle","width","sliderLabelStyle","SeriesChart","isHidden","0","1","2","3","4","5","handleLinearClick","linearLogToggleClicked","type","handleLogClick","handleCumulativeChange","cumulative","target","checked","handleChartClick","setTimeout","datasets","hidden","chartRef","chartInstance","isDatasetVisible","myId","hideShowDatasetClicked","handleSliderChanged","value","movingAverageDays","smooth","number","half","Math","floor","result","sum","j","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","series","labels","casesData","deathsData","cumulativeCasesData","cumulativeDeathsData","timeline","date","replace","deaths","cumulativeCases","cumulativeDeaths","datasetLabels","minY","undefined","maxY","borderColor","borderWidth","fill","data","calcMovingAverage","origData","findMin","findMax","chartData","createChartData","options","animation","duration","responsive","maintainAspectRatio","legend","display","text","scales","xAxes","yAxes","ticks","suggestedMin","suggestedMax","callback","values","RadioGroup","onChange","handleRadioChange","FormControlLabel","control","Radio","color","Checkbox","disabled","Slider","step","track","defaultValue","CovidData","filepath","readBigDataFile","timelineItem","dates","keys","newTimeline","csvText","previousCases","previousDeaths","previousCounty","previousState","stateData","tokens","nationalSeries","statesData","lines","split","linesArray","countyName","stateName","parseInt","pc","pd","newItem","addToSeries","countiesData","countySeries","allCounties","optimizeSeries","allStates","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","receivedBigDataFile","responseText","alert","open","send","MyLink","handleClick","reportOutboundLink","children","enable","MyTooltip","withStyles","theme","tooltip","palette","common","white","boxShadow","shadows","Tooltip","FormatSliderValue","popperRef","useRef","useEffect","update","placement","PopperProps","App","sliderRef","startDate","calcStatesList","calcCountiesList","handleStateSelected","handleCountySelected","handleSliderCommited","trimToStartDate","countyData","covidData","nationalTimeline","dateList","statesList","selectedState","selectedCounty","dateSliderUsed","findIndex","element","slice","desiredIndex","findDateIndex","currentIndex","unshift","className","alt","src","xmlns","viewBox","d","onChangeCommitted","valueLabelDisplay","valueLabelFormat","ValueLabelComponent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c82895a.chunk.js","sourcesContent":["class Analytics {\n\tenabled = true;\n\n\tenable(enabled) {\n\t\tthis.enabled = enabled;\n\t}\n\n\treportEvent(event, category, label) {\n\t\t// console.log(\"Analytics\", event, category, label);\n\t\tif (this.enabled) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tgtag(\"event\", event, {\n\t\t\t\tevent_category: category || \"engagement\",\n\t\t\t\tevent_label: label,\n\t\t\t\ttransport_type: \"beacon\"\t\t\t\n\t\t\t});\n\t\t\t// BTW, setting the transport method to \"beacon\" lets the hit be sent\n\t\t\t// using \"navigator.sendBeacon\" in browsers that support it.\n\t\t}\n\t}\n\n\treportOutboundLink(url) {\n\t\tthis.reportEvent(\"click\", \"outbound\", url);\n\t}\n\n\tselectCount = {};\n\n\titemSelected(name) {\n\t\tvar count = this.selectCount[name] || 0;\n\t\tcount += 1;\n\t\tthis.selectCount[name] = count;\n\t\tif (count === 1) {\n\t\t\tthis.reportEvent(\"table_select_1\", null, name)\n\t\t} else if (count === 5) {\n\t\t\tthis.reportEvent(\"table_select_5\", null, name)\n\t\t}\n\t}\n\n\tcounts = {\n\t\thideshow_dataset_click: 0,\n\t\tdate_slider_click: 0,\n\t\tlinlog_click: 0,\n\t\tarrow_click: 0\n\t};\n\n\tcountableEvent(eventName) {\n\t\tthis.counts[eventName] += 1;\n\t\tif (this.counts[eventName] === 1) {\n\t\t\tthis.reportEvent(`${eventName}_1`)\n\t\t} else if (this.counts[eventName] === 5) {\n\t\t\tthis.reportEvent(`${eventName}_5`)\n\t\t}\n\t}\n\n\thideShowDatasetClicked() {\n\t\tthis.countableEvent(\"hideshow_dataset_click\");\n\t}\n\n\tdateSliderUsed() {\n\t\tthis.countableEvent(\"date_slider_click\");\n\t}\n\n\tlinearLogToggleClicked() {\n\t\tthis.countableEvent(\"linlog_click\");\n\t}\n\n\tarrowClicked() {\n\t\tthis.countableEvent(\"arrow_click\");\n\t}\n\n\tstatic instance;\n}\n\nif (!Analytics.instance) {\n\tAnalytics.instance = new Analytics();\n};\n\nexport default Analytics.instance;\n","import React from 'react';\nimport { \n\tLink,\n\tTable,\n\tTableHead,\n\tTableBody,\n\tTableRow,\n\tTableCell,\n\tTableContainer\n} from '@material-ui/core';\nimport Analytics from './Analytics';\nimport './App.css';\n\n\nconst slimStyle = {height: \"0px\", padding: \"0px\"};\nconst buttonsStyle = {position: \"relative\", left: \"70px\", fontSize: \"20px\"};\nconst regionTableStyle = {\n   \theight: \"400px\",\n    maxHeight: \"400px\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n\tborderRadius: \"10px\"\n};\n\nexport default class RegionTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectedIndex = 0;\n\t\tthis.style = Object.assign({backgroundColor: props.backgroundColor}, regionTableStyle);\n\t\tthis.state = {\n\t\t\tselection: this.props.list[this.selectedIndex].name,\n\t\t\tlist: this.createSortedList(\"cases\", false), \n\t\t\tsortBy: \"cases\",\n\t\t\tsortAscending: false\n\t\t};\n\t    this.handleCellClick = this.handleCellClick.bind(this);\t\t\n\t    this.select = this.select.bind(this);\t\t\n\t    this.handleNextClick = this.handleNextClick.bind(this);\t\t\n\t    this.handlePrevClick = this.handlePrevClick.bind(this);\t\t\n\t    this.toggleSort = this.toggleSort.bind(this);\n\t    this.selectedRef = React.createRef();\n\t    this.tableContainerRef = React.createRef();\n\t}\n\n\tsortArray(array, property, numeric, ascending) {\n\t\tvar newArray = [];\n\t\tfor (var i = 0; i < array.length; i += 1) {\n\t\t\tnewArray.push(Object.assign({}, array[i]));\n\t\t}\n\n\t\tif (!numeric) {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\tif (a[property] < b[property]) {\n\t\t\t\t\treturn ascending ? -1 : 1;\n\t\t\t\t} else if (a[property] > b[property]) {\n\t\t\t\t\treturn ascending ? 1 : -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\treturn ascending ? a[property] - b[property] : b[property] - a[property];\n\t\t\t});\n\t\t}\n\t\treturn newArray;\n\t}\n\n\tselect(name) {\n\t\tthis.setState({selection: name});\n\t\tthis.props.onSelected(name);\n\t}\n\n\thandleCellClick(e, name) {\n\t\tAnalytics.itemSelected(this.props.title, name);\n\t\tthis.select(name);\n\t}\n\n\tfindSelectedIndex() {\n\t\tfor (var i = 0; i < this.state.list.length; i += 1) {\n\t\t\tif (this.state.list[i].name === this.state.selection) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n \t\t// alert(\"error\");\n\t}\n\n\thandleNextClick(e) {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index < this.state.list.length - 1) {\n\t\t\tindex += 1;\n\t\t}\n\t\tthis.select(this.state.list[index].name);\t\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandlePrevClick(e) {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index > 0) {\n\t\t\tindex -= 1;\n\t\t}\n\t\tthis.select(this.state.list[index].name);\t\n\t\tAnalytics.arrowClicked();\n\t}\n\n\ttoggleSort() {\n\t\tif (this.state.sortBy === \"cases\") {\n\t\t\tthis.setState({sortBy: \"name\", sortAscending: true});\n\t\t} else {\n\t\t\tthis.setState({sortBy: \"cases\", sortAscending: false});\n\t\t}\n\t}\n\n\tcreateSortedList(sortBy, ascending) {\n\t\tif (sortBy === \"cases\") {\n\t\t\treturn this.sortArray(this.props.list, \"cases\", true, ascending);\n\t\t} else {\n\t\t\treturn this.sortArray(this.props.list, \"name\", false, ascending);\n\t\t}\n\t}\n\n\tensureSelectionVisible() {\n\t\tconst container = this.tableContainerRef.current;\n\t\tconst row = this.selectedRef.current;\n\t\tif (!row) return;\n\t\tconst containerVisibleHeight = container.scrollHeight - container.scrollTopMax;\n\t\tconst rowBottom = row.offsetTop + row.offsetHeight;\n\t\tif (rowBottom < (container.scrollTop + containerVisibleHeight) && (row.offsetTop - row.offsetHeight) > container.scrollTop) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.selectedRef.current.scrollIntoView();\n\t\tif (container.scrollTop < (row.offsetTop + 100) && container.scrollTop !== container.scrollTopMax) {\n\t\t\tthis.tableContainerRef.current.scrollBy(0, -100);\n\t\t}\n\t}\n\n\tlistsEqual(a, b) {\n\t\treturn (a.length === b.length) && (a.length === 0 || (a[0].name === b[0].name));\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tvar listChanged = !this.listsEqual(prevProps.list, this.props.list);\n\t\tif ((prevState.sortBy !== this.state.sortBy) || (prevState.sortAscending !== this.state.sortAscending) || listChanged) {\n\t\t\tthis.setState({list: this.createSortedList(this.state.sortBy, this.state.sortAscending)});\n\t\t}\n\t\tif (listChanged) {\n\t\t\tthis.selectedIndex = 0;\n\t\t\tthis.select(this.state.list[this.selectedIndex].name);\t\n\t\t}\n\t\tthis.ensureSelectionVisible();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.onSelected(this.state.selection);\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<div style={buttonsStyle}>\n\t\t\t\t<Link href=\"#\" onClick={this.handlePrevClick}>◀</Link>\n\t\t\t\t&nbsp;\n\t\t\t\t<Link href=\"#\" onClick={this.handleNextClick}>▶</Link>\n\t\t\t</div>\n\t\t\t<TableContainer ref={this.tableContainerRef} style={this.style}>\n\t\t\t\t<Table stickyHeader style={slimStyle} size=\"small\">\n\t\t\t\t\t<TableHead>\n            \t\t\t<TableRow style={slimStyle}>\n              \t\t\t\t<TableCell style={slimStyle} onClick={this.toggleSort} align=\"left\">{this.props.title}{this.state.sortBy === \"name\" ? \"▲\" : \"\"}</TableCell>\n              \t\t\t\t<TableCell style={slimStyle} onClick={this.toggleSort} align=\"right\">{this.state.sortBy === \"cases\" ? \"▼\" : \"\"}Cases</TableCell>\n            \t\t\t</TableRow>            \n     \t\t\t\t</TableHead>\n\n\t\t\t\t\t<TableBody>\n\t  \t\t\t\t\t{this.state.list.map((item) => {\n\t  \t\t\t\t\t\tvar selected = item.name === this.state.selection;\n\n\t\t\t\t\t  \t\treturn <TableRow ref={selected ? this.selectedRef : null} selected={selected} style={slimStyle} key={item.name} onClick={this.props.itemClick}>\n\t\t\t\t\t\t\t\t<TableCell style={slimStyle} align=\"left\" onClick={(e) => this.handleCellClick(e, item.name)}>{item.name}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={slimStyle} align=\"right\" onClick={(e) => this.handleCellClick(e, item.name)}>{item.cases}</TableCell>\n\t\t\t\t  \t\t\t</TableRow>\n\t\t\t\t\t    })}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</div>);\n\t}\n}\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Checkbox, FormControlLabel, Radio, RadioGroup, Slider } from '@material-ui/core';\nimport Analytics from './Analytics';\nimport \"./App.css\";\nconst linLogStyle = {position: \"absolute\", left: \"10px\", top: \"5px\"};\nconst checkboxesStyle = {position: \"absolute\", left: \"105px\", top: \"25px\"};\nconst containerStyle = {position: \"relative\", top: \"0px\"};\nconst radioStyle = {height: \"23px\"};\nconst sliderStyle = {position: \"absolute\", left: \"210px\", top: \"2px\", width: \"60px\"};\nconst sliderLabelStyle = {position: \"absolute\", left: \"105px\", top: \"6px\"};\n\n\nclass SeriesChart extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.chartRef = React.createRef();\n\t\tthis.state = {type: \"linear\", movingAverageDays: 1, cumulative: false, smooth: false};\n\t\tthis.datasets = [];\n\t}\n\n\tcalcMovingAverage(array, number) {\n\t\tvar half = Math.floor(this.state.movingAverageDays / 2);\n\t\tvar result = [];\n\t\tvar i;\n\t\tfor (i = 0; i < half; i += 1) {\n\t\t\tresult.push(array[i]);\n\t\t}\n\t\tfor (i = half; i < array.length; i += 1) {\n\t\t\tvar sum = 0;\n\t\t\tfor (var j = 0; j < number; j += 1) {\n\t\t\t\tvar ind = Math.min(array.length - 1, i + half - j);\n\t\t\t\tsum += array[ind];\n\t\t\t}\n\t\t\tresult.push(sum / number);\n\t\t}\n\t\treturn result;\n\t}\n\n\tisHidden = {\n\t\t0: false,\n\t\t1: false,\n\t\t2: false,\n\t\t3: false,\n\t\t4: false,\n\t\t5: false\n\t};\n\n\tfindMin(array) {\n\t\tlet min = Number.POSITIVE_INFINITY;\n\t\tfor (let i = 0; i < array.length; i += 1) {\n\t\t\tmin = Math.min(min, array[i]);\n\t\t}\n\t\treturn min;\n\t}\n\n\tfindMax(array) {\n\t\tlet max = Number.NEGATIVE_INFINITY;\n\t\tfor (let i = 0; i < array.length; i += 1) {\n\t\t\tmax = Math.max(max, array[i]);\n\t\t}\n\t\treturn max;\n\t}\n\n\tcreateChartData (series, cumulative, smooth) {\n\t\tvar labels = [];\n\t\tvar casesData = [];\n\t\tvar deathsData = [];\n\t\tvar cumulativeCasesData = [];\n\t\tvar cumulativeDeathsData = [];\n\t\tfor (var i = 0; i < series.timeline.length; i += 1) {\n\t\t\tvar item = series.timeline[i];\n\t\t\tlabels.push(item.date.replace(/2020-/, \"\"));\n\t\t\tcasesData.push(item.cases);\n\t\t\tdeathsData.push(item.deaths);\n\t\t\tcumulativeCasesData.push(item.cumulativeCases);\n\t\t\tcumulativeDeathsData.push(item.cumulativeDeaths);\n\t\t}\n\n\t\tconst datasetLabels = [\n\t\t\t\"Cumulative Cases\", \"Cumulative Deaths\", \"Daily New Cases\", \n\t\t\t`Daily New Cases ${this.state.movingAverageDays}-day Average`, \"Daily Deaths\",\n\t\t\t`Daily Deaths ${this.state.movingAverageDays}-day Average`];\n\n\t\tthis.minY = undefined;\n\t\tthis.maxY = undefined;\n\n\t\tif (cumulative) {\n\t\t\tthis.datasets = [\n\t\t\t\t{\n\t\t\t\t\tmyId: 0,\n\t\t\t\t\tlabel: datasetLabels[0],\n\t\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\t\tborderColor: 'rgba(75,75,192,0.5)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[0],\n\t\t\t\t\tdata: cumulativeCasesData\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmyId: 1,\n\t\t\t\t\tlabel: datasetLabels[1],\n\t\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\t\tborderColor: 'rgba(75,150,75,0.5)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[1],\n\t\t\t\t\tdata: cumulativeDeathsData\n\t\t\t\t}\n\t\t\t];\n\n\t\t} else if (smooth) {\n\t\t\tthis.datasets = [\n\t\t\t\t{\n\t\t\t\t\tmyId: 3,\n\t\t\t\t\tlabel: datasetLabels[3],\n\t\t\t\t\tbackgroundColor: \"#aaaaaa\",\n\t\t\t\t\tborderColor: 'rgba(75,75,192,0.3)',\n\t\t\t\t\tborderWidth: 4,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[3],\n\t\t\t\t\tdata: this.calcMovingAverage(casesData, this.state.movingAverageDays),\n\t\t\t\t\torigData: casesData\n\t\t\t\t},\t\t\t\n\t\t\t\t{\n\t\t\t\t\tmyId: 5,\n\t\t\t\t\tlabel: datasetLabels[5],\n\t\t\t\t\tborderColor: 'rgba(75,150,75,0.3)',\n\t\t\t\t\tborderWidth: 4,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[5],\n\t\t\t\t\tdata: this.calcMovingAverage(deathsData, this.state.movingAverageDays),\n\t\t\t\t\torigData: deathsData\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tif (!this.isHidden[3] && !this.isHidden[5]) {\n\t\t\t\tthis.minY = Math.min(this.findMin(casesData), this.findMin(deathsData));\n\t\t\t\tthis.maxY = Math.max(this.findMax(casesData), this.findMax(deathsData));\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.datasets = [\n\t\t\t\t{\n\t\t\t\t\tmyId: 2,\n\t\t\t\t\tlabel: datasetLabels[2],\n\t\t\t\t\tbackgroundColor: \"#aaaaaa\",\n\t\t\t\t\tborderColor: 'rgba(75,75,192,0.7)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[2],\n\t\t\t\t\tdata: casesData\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmyId: 4,\n\t\t\t\t\tlabel: datasetLabels[4],\n\t\t\t\t\tbackgroundColor: \"#aaaaaa\",\n\t\t\t\t\tborderColor: 'rgba(75,150,75,0.7)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[4],\n\t\t\t\t\tdata: deathsData\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\n\t\treturn {labels: labels, datasets: this.datasets};\n\t}\n\n\thandleLinearClick = () => {\n\t\tAnalytics.linearLogToggleClicked();\n    \tthis.setState({type: \"linear\"});\n\t}\n\n\thandleLogClick = () => {\n\t\tAnalytics.linearLogToggleClicked();\n\t\tthis.setState({type: \"logarithmic\"});\n\t}\n\n\thandleCumulativeChange = (event) => {\n\t\tthis.setState({cumulative: event.target.checked});\n\t}\n\n\thandleChartClick = () => {\n\t\tsetTimeout(() => {\n\t\t\tfor (var i = 0; i < this.datasets.length; i += 1) {\n\t\t\t\tconst hidden = !this.chartRef.current.chartInstance.isDatasetVisible(i);\n\t\t\t\tif (hidden !== this.isHidden[this.datasets[i].myId]) {\n\t\t\t\t\tAnalytics.hideShowDatasetClicked();\n\t\t\t\t\tthis.isHidden[this.datasets[i].myId] = hidden;\n\t\t\t\t}\n\t\t\t}\n\t\t}, 200)\n\t}\n\n\thandleSliderChanged = (e, value) => {\n\t\tthis.setState({movingAverageDays: value, smooth: value !== 1});\n\t}\n\n\trender() {\n\t\tconst chartData = this.props.series && this.createChartData(\n\t\t\tthis.props.series, this.state.cumulative, this.state.smooth);\n\n\t    const options = {\n\t\t\tanimation: {\n\t\t\t\tduration: 0\n\t\t\t},\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: true,\n\t\t\tonClick: this.handleChartClick, // FYI there is also onResize, onComplete, onHover, before/afterUpdate\n\t\t\tlegend: {position: 'top'},\n\t\t\ttitle: {display: true, text: this.props.title, fontSize: \"16\"},\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\tdisplay: true\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\ttype: this.state.type,\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsuggestedMin: this.minY, // minY and maxY are computed by createChartData()\n\t\t\t\t\t\tsuggestedMax: this.maxY,\n\t\t\t\t\t\tcallback: function(value, index, values) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t};\n\n\t\treturn (<div style={containerStyle}>\n\t\t\t<div style={linLogStyle}>\n\t\t        <RadioGroup value={this.state.type} onChange={this.handleRadioChange}>\n\t\t          <FormControlLabel control={<Radio color=\"default\" size=\"small\"/>} style={radioStyle} value=\"linear\" label=\"Linear\" onClick={this.handleLinearClick}/>\n\t\t          <FormControlLabel control={<Radio color=\"default\" size=\"small\"/>} style={radioStyle} value=\"logarithmic\" label=\"Log\" onClick={this.handleLogClick}/>\n\t\t        </RadioGroup>\n\t\t\t</div>\n\t\t\t<div style={checkboxesStyle}>\n\t\t\t\t<FormControlLabel control={<Checkbox size=\"small\" color=\"default\"/>} value={this.state.cumulative} label=\"Cumulative\" style={{fontSize: \"4px\"}} onChange={this.handleCumulativeChange}/>\n\t\t\t</div>\n\t\t\t<span style={sliderLabelStyle} disabled={this.state.cumulative}>Smoothing:</span>\n\t\t\t<Slider\n\t\t\t\tstyle={sliderStyle}\n\t\t\t\tdisabled={this.state.cumulative}\n\t\t\t\tmin={1}\n\t\t\t\tmax={5}\n\t\t\t\tstep={2}\n\t\t\t\ttrack=\"inverted\"\n\t\t\t\tdefaultValue={1}\n\t\t\t\tonChange={this.handleSliderChanged}\n\t\t\t/>\n\t\t\t{this.props.series && <Line ref={this.chartRef} options={options} data={chartData}/>}\n\t\t</div>);\n\t}\n}\t\n\nexport default SeriesChart;\n\n","export default class CovidData {\n\n\t// This class reads a covid states/counties data file, and parses\n\t// the file into a data structure like this:\n\t//\n\t// {\n\t// \tAlabama: {\n\t// \t\tcountiesData: {\n\t//\t \t\t\" All counties\": Series,\n\t// \t\t\tAlameda: Series,\n\t// \t\t\tMarin: Series,\n\t// \t\t\t...\n\t// \t\t},\n\t// \t},\n\t//  Alaska ...,\n\t//  ...\n\t//  \" All states\": { ... }\n\t// }\n\t//\n\t// \"Series\" is like this \n\t// {\n\t// \t\ttimeline: [{date: ..., cases: ..., deaths: ..., totalCases: ..., totalDeaths: ...}, ...]\n\t// \t\tcases: nnn\n\t// \t\tdeaths: nnn\n\t// }\n\t//\n\t// Once the data is available, we call the \"callback\" function \n\t// with the data structure as the parameter.\n\n\tstatic allCounties = \" All counties\"; // the leading space makes it sort first.\n\tstatic allStates = \" All states\";\n\n\tconstructor(filepath, callback) {\n\t\tthis.callback = callback;\n\t\tthis.readBigDataFile(filepath);\n\t}\n\n\t/*private*/ addToSeries(series, item) {\n\t\tseries.deaths += item.deaths;\n\t\tseries.cases += item.cases;\n\t\tvar timelineItem = series.timeline[item.date];\n\t\tif (!timelineItem) {\n\t\t\ttimelineItem = {date: item.date, cases: item.cases, deaths: item.deaths,\n\t\t\t\tcumulativeCases: item.cumulativeCases, cumulativeDeaths: item.cumulativeDeaths};\n\t\t\tseries.timeline[item.date] = timelineItem;\n\t\t} else {\n\t\t\ttimelineItem.deaths += item.deaths;\n\t\t\ttimelineItem.cases += item.cases;\n\t\t\ttimelineItem.cumulativeCases += item.cumulativeCases;\n\t\t\ttimelineItem.cumulativeDeaths += item.cumulativeDeaths;\n\t\t}\n\t}\n\n\t/*private*/ optimizeSeries(series) {\n\t\tvar dates = Object.keys(series.timeline).sort();\n\t\tvar newTimeline = [];\n\t\tfor (var i = 0; i < dates.length; i += 1) {\n\t\t\tnewTimeline.push(series.timeline[dates[i]]);\n\t\t}\n\t\tseries.timeline = newTimeline;\n\t}\n\n\t// csv columns are: date,county,state,fips,cases,deaths\n\t/*private*/ receivedBigDataFile(csvText) {\n\t\tvar previousCases;\n\t\tvar previousDeaths;\n\t\tvar previousCounty;\n\t\tvar previousState;\n\t\tvar stateData;\n\t\tvar nationalSeries = {timeline: [], cases: 0, deaths: 0};\n\t\tvar statesData = {};\n\t\tvar tokens;\n\t\tvar lines = csvText.split(/[\\n\\r]+/);\n\t\tvar linesArray = [];\n\t\tfor (var i = 0; i < lines.length; i += 1) {\n\t\t\ttokens = lines[i].split(/,/);\n\t\t\tif (tokens.length !== 6) continue;\n\t\t\tif (tokens[0] === \"date\") continue;\n\t\t\tlinesArray.push(tokens);\n\t\t}\n\t\tlinesArray.sort((a, b) => {\n\t\t\tif (a[2] > b[2]) return 1;\n\t\t\tif (a[2] < b[2]) return -1;\n\t\t\tif (a[1] > b[1]) return 1;\n\t\t\tif (a[1] < b[1]) return -1;\n\t\t\tif (a[0] > b[0]) return 1;\n\t\t\tif (a[0] < b[0]) return -1;\n\t\t\treturn 0;\n\t\t});\n\n\t\tfor (var j = 0; j < linesArray.length; j += 1) {\n\t\t\ttokens = linesArray[j];\n\t\t\tconst date = tokens[0];\n\t\t\tconst countyName = tokens[1];\n\t\t\tconst stateName = tokens[2];\n\t\t\t// we don't use fips which is tokens[3]\n\t\t\tvar cases = parseInt(tokens[4], 10);\n\t\t\tvar deaths = parseInt(tokens[5], 10);\n\n\t\t\tif (countyName !== previousCounty || stateName !== previousState) {\n\t\t\t\tpreviousCounty = countyName;\n\t\t\t\tpreviousState = stateName;\n\t\t\t\tpreviousCases = 0;\n\t\t\t\tpreviousDeaths = 0;\n\t\t\t}\n\t\t\tvar pc = previousCases;\n\t\t\tvar pd = previousDeaths;\n\t\t\tpreviousCases = cases;\n\t\t\tpreviousDeaths = deaths;\n\t\t\tcases -= pc;\n\t\t\tdeaths -= pd;\n\n\t\t\tvar newItem = {date: date, cases: cases, deaths: deaths, cumulativeCases: previousCases, cumulativeDeaths: previousDeaths};\n\n\t\t\tthis.addToSeries(nationalSeries, newItem);\n\n\t\t\tstateData = statesData[stateName];\n\t\t\tif (!stateData) {\n\t\t\t\tstateData = {series: {timeline: [], cases: 0, deaths: 0}, countiesData: {}};\n\t\t\t\tstatesData[stateName] = stateData;\n\t\t\t}\n\t\t\tthis.addToSeries(stateData.series, newItem);\n\n\t\t\tvar countySeries = stateData.countiesData[countyName];\n\t\t\tif (!countySeries) {\n\t\t\t\tcountySeries = {timeline: [], cases: 0, deaths: 0};\n\t\t\t\tstateData.countiesData[countyName] = countySeries;\n\t\t\t}\n\t\t\tthis.addToSeries(countySeries, newItem);\n\t\t}\n\n\t\tfor (var stateName in statesData) {\n\t\t\tstateData = statesData[stateName];\n\t\t\tstateData.countiesData[CovidData.allCounties] = stateData.series;\n\t\t\tdelete stateData.series;\n\t\t\tfor (var b in stateData.countiesData) {\n\t\t\t\tthis.optimizeSeries(stateData.countiesData[b]);\n\t\t\t}\n\t\t}\n\t\tthis.optimizeSeries(nationalSeries);\n\t\tstatesData[CovidData.allStates] = {countiesData: {[CovidData.allCounties]: nationalSeries}};\n\t\tthis.callback(statesData);\n\t}\n\n\t/*private*/ readBigDataFile(filepath) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.onreadystatechange = () => {\n\t\t\tif(xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || (status >= 200 && status < 400)) {\n\t\t\t\t\t// The request has been completed successfully\n\t\t\t\t\tthis.receivedBigDataFile(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Couldn't fetch data file: status\", status);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.open(\"GET\", filepath);\n\t\txhr.send();\n\t}\n}\n","import React from 'react';\nimport {Link} from '@material-ui/core';\nimport Analytics from './Analytics';\n\nexport default class MyLink extends React.Component {\n\thandleClick = () => {\n\t\tAnalytics.reportOutboundLink(this.props.href);\n\t}\n\n\trender() {\n\t\treturn <Link target={this.props.target} href={this.props.href} onClick={this.handleClick}>\n\t\t\t{this.props.children}\n\t\t</Link>\n\t}\n}\n","import React from 'react';\nimport { Slider, Tooltip } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useEffect, useRef } from \"react\";\n\nimport RegionTable from './RegionTable';\nimport SeriesChart from './SeriesChart';\nimport CovidData from './CovidData';\nimport Analytics from './Analytics';\nimport MyLink from './MyLink';\n\nconst development = false;\n// for development=false, set package.json.homepage = \"https://mark-shepherd.com/covid-stats\" (formerly markshepherd.github.io)\n// for development=true, set package.json.homepage = \"http://localhost/covid/CovidStats/build\"\nconst pathPrefix = development ? \"build/\" : \"\";\nconst dataDate = \"4-11-20\";\nconst uiDate = \"Apr 11, 2020\"\nAnalytics.enable(!development);\n\nconst MyTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 15,\n  },\n}))(Tooltip);\n\n// FormatSliderValue source code comes from https://github.com/mui-org/material-ui/issues/17905\nconst FormatSliderValue = props => {\n  const { children, value, open } = props;\n\n  const popperRef = useRef(null);\n  useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <MyTooltip\n      open={open}\n      title={value}\n      placement=\"top\"\n      PopperProps={{ popperRef }}\n    >\n     \t{children}\n    </MyTooltip>\n  );\n};\n\nclass App extends React.Component {\n\t/* this.state = \n\t\t{\n\t\t\tdateList,\n\t\t\tstatesData,\n\t\t\tstatesList,\n\t\t\tselectedState,\n\t\t\tselectedCounty\n\t \t}\n\t*/\n\n\tconstructor(props) {\t\n\t\tsuper(props);\n\t\tthis.state = {startDate: \"2020-03-01\"};\n\t\tthis.calcStatesList = this.calcStatesList.bind(this);\t\t\n\t\tthis.calcCountiesList = this.calcCountiesList.bind(this);\t\t\n\t\tthis.handleStateSelected = this.handleStateSelected.bind(this);\t\t\n\t\tthis.handleCountySelected = this.handleCountySelected.bind(this);\t\n\t\tthis.handleSliderChanged = this.handleSliderChanged.bind(this);\t\n\t\tthis.handleSliderCommited = this.handleSliderCommited.bind(this);\t\n\t\tthis.trimToStartDate = this.trimToStartDate.bind(this);\t\n\t}\n\n\tcalcStatesList(statesData) {\n\t\tconst result = [];\n\t\tconst keys = Object.keys(statesData).sort();\n\t\tfor (var i = 0; i < keys.length; i += 1) {\n\t\t\tconst stateName = keys[i];\n\t\t\tconst stateData = statesData[stateName];\n\t\t\tresult.push({name: stateName, cases: stateData.countiesData[CovidData.allCounties].cases});\n\t\t}\n\t\treturn result;\n\t}\n\n\tcalcCountiesList(statesData, stateName) {\n\t\tconst stateData = statesData[stateName];\n\t\tconst result = [];\n\t\tconst keys = Object.keys(stateData.countiesData).sort();\n\t\tfor (var i = 0; i < keys.length; i += 1) {\n\t\t\tconst countyName = keys[i];\n\t\t\tconst countyData = stateData.countiesData[countyName];\n\t\t\tresult.push({name: countyName, cases: countyData.cases});\n\t\t}\n\t\treturn result;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.covidData = new CovidData(`${pathPrefix}us-counties-${dataDate}.csv`, (statesData) => {\n\t\t\tvar nationalTimeline =\n\t\t\t\tstatesData[CovidData.allStates].countiesData[CovidData.allCounties].timeline;\n\t\t\tthis.setState({\n\t\t\t\tdateList: nationalTimeline.map((item) => item.date),\n\t\t\t\tstatesData: statesData,\n\t\t\t\tstatesList: this.calcStatesList(statesData)});\n\t\t});\n\t}\n\n\thandleStateSelected(stateName) {\n\t\tthis.setState({selectedState: stateName});\n\t}\n\n\thandleCountySelected(countyName) {\n\t\tthis.setState({selectedCounty: countyName});\n\t}\n\n\tsliderRef = React.createRef();\n\n\thandleSliderChanged(e, value) {\n\t\tthis.setState({startDate: this.state.dateList[value]});\n\t}\n\n\thandleSliderCommited(e, value) {\n\t\tAnalytics.dateSliderUsed();\n\t}\n\n\tfindDateIndex(date) {\n\t\tvar result = this.state.dateList.findIndex((element) => { \n\t\t\tvar x = element === date;\n\t\t\treturn x;\n\t\t});\n\t\treturn result;\n\t}\n\n\ttrimToStartDate(startDate, series) {\n\t\tif (!series || !series.timeline || series.timeline.length === 0) {\n\t\t\treturn series;\n\t\t}\n\t\tfor(var i = 0; i < series.timeline.length; i += 1) {\n\t\t\tif (startDate <= series.timeline[i].date) {\n\t\t\t\tvar result = Object.assign({}, series);\n\t\t\t\tresult.timeline = series.timeline.slice(i);\n\t\t\t\tvar desiredIndex = this.findDateIndex(startDate);\n\t\t\t\tvar currentIndex = this.findDateIndex(result.timeline[0].date);\n\t\t\t\twhile(desiredIndex < currentIndex) {\n\t\t\t\t\tcurrentIndex -= 1;\n\t\t\t\t\tresult.timeline.unshift(\n\t\t\t\t\t\t{date: this.state.dateList[currentIndex], cases: 0, deaths: 0});\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn series;\n\t}\n\n\trender() {\n\t\tvar title = (this.state.selectedCounty === CovidData.allCounties) \n\t\t\t? this.state.selectedState + \",\" + this.state.selectedCounty\n\t\t\t: this.state.selectedState + \", \" + this.state.selectedCounty + \" county\";\n\n\t\treturn (\n\t\t\t<div className=\"app\"> \n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<span className=\"myheader\">Covid-19 Statistics by U.S. State and County</span>\n\t\t\t\t\t<br/>\n\t\t\t\t\tLast updated {uiDate}.\n\t\t\t\t</div>\n\n\t\t\t\t{this.state.statesList && <div className=\"state\">\n\t\t\t\t\t<RegionTable backgroundColor=\"#ffffe0\" title=\"State\"\n\t\t\t\t\t\tlist={this.state.statesList} onSelected={this.handleStateSelected}/></div>}\n\n\t\t\t\t{this.state.selectedState && <div className=\"county\">\n\t\t\t\t\t<RegionTable backgroundColor=\"#fffff4\" title=\"County\"\n\t\t\t\t\t\tlist={this.calcCountiesList(this.state.statesData, this.state.selectedState)}\n\t\t\t\t\t\tonSelected={this.handleCountySelected}/></div>}\n\n\t\t\t\t{this.state.selectedCounty && <div className=\"chart\">\n\t\t\t\t\t<SeriesChart\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tseries={this.trimToStartDate(this.state.startDate, this.state.statesData[this.state.selectedState].countiesData[this.state.selectedCounty])}/></div>}\n\n\t\t\t\t<div className=\"notes\">\n\t\t\t\t\t<div className=\"notesText\">\n\t\t\t\t\t\t<p>Created by \n\t\t\t\t\t\t<MyLink target=\"_blank\" href=\"mailto:markcharts591@gmail.com\"> Mark Shepherd</MyLink>.\n\t\t\t\t\t\tData provided by the <MyLink target=\"_blank\" href=\"https://github.com/nytimes/covid-19-data\"> New York Times</MyLink>.\n\t\t\t\t\t\tSource code is <MyLink target=\"_blank\" href=\"https://github.com/markshepherd/CovidStats\"> here</MyLink>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"socialIcons\">\n\t\t\t\t\t\t<MyLink target=\"_blank\" href=\"https://twitter.com/MarkEShepherd\">\n\t\t\t\t\t\t \t<img className=\"socialIcon\"\n\t\t\t\t\t\t \t\talign=\"right\"\n\t\t\t\t\t\t \t\talt=\"Go to Mark's Twitter\"\n\t\t\t\t\t\t  \t\tsrc={`${pathPrefix}Twitter_Social_Icon_Circle_Color.svg`}/>\n\t\t\t\t\t\t</MyLink>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n                        <MyLink target=\"_blank\" href=\"https://larkdales.com\">\n\t                        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"\n\t                        className=\"socialIcon\" align=\"right\" alt=\"Visit the Larkdales\">\n                                 <path d=\"M26.451.526C12.155.526.565 12.116.565 26.412s11.59 25.886 25.886 25.886 25.886-11.59 25.886-25.886S40.748.526 26.451.526zM40.005 27.14h-2.689v9.918c0 .718-.026 1.299-1.014 1.299h-6.574V28.41h-6.554v9.947h-6.263c-1.295 0-1.326-.581-1.326-1.299V27.14h-2.689c-.96 0-1.206-.56-.547-1.244l12.903-12.915a1.659 1.659 0 012.399 0l12.902 12.915c.659.684.413 1.244-.548 1.244z\"></path></svg>\n                        </MyLink>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"dateControl\">\n\t\t\t\t\t\t<span>Choose starting date of graph...</span>\n\t\t\t\t\t\t{this.state.dateList && <Slider\n\t\t\t\t\t\t\tref={this.sliderRef}\n\t\t\t\t\t\t\tmin={0}\n\t\t\t\t\t\t\tmax={this.state.dateList.length - 1}\n\t\t\t\t\t\t\ttrack=\"inverted\"\n\t\t\t\t\t\t\tdefaultValue={this.findDateIndex(\"2020-03-01\")}\n\t\t\t\t\t\t\tonChange={this.handleSliderChanged}\n\t\t\t\t\t\t\tonChangeCommitted={this.handleSliderCommited}\n\t\t\t\t\t\t\tvalueLabelDisplay=\"auto\"\n  \t\t\t\t\t\t\tvalueLabelFormat={(index) => this.state.dateList[index]}\t\n  \t\t\t\t\t\t\tValueLabelComponent={FormatSliderValue}\n\t\t\t\t\t\t/>}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}