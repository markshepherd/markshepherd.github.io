{"version":3,"sources":["Analytics.js","RegionTable.js","SeriesChart.js","CovidData.js","MyLink.js","App.js","serviceWorker.js","index.js"],"names":["Analytics","selectCount","linlogCount","arrowCount","event","category","label","gtag","event_category","event_label","transport_type","url","this","reportEvent","name","count","instance","slimStyle","height","padding","buttonsStyle","position","left","fontSize","regionTableStyle","maxHeight","marginLeft","marginRight","borderRadius","RegionTable","props","selectedIndex","style","Object","assign","backgroundColor","state","selection","list","createSortedList","sortBy","sortAscending","handleCellClick","bind","select","handleNextClick","handlePrevClick","toggleSort","selectedRef","React","createRef","tableContainerRef","array","property","numeric","ascending","newArray","i","length","push","sort","a","b","setState","onSelected","e","itemSelected","title","index","findSelectedIndex","arrowClicked","sortArray","container","current","row","containerVisibleHeight","scrollHeight","scrollTopMax","offsetTop","offsetHeight","scrollTop","scrollIntoView","scrollBy","prevProps","prevState","snapshot","listChanged","listsEqual","ensureSelectionVisible","Link","href","onClick","TableContainer","ref","Table","stickyHeader","size","TableHead","TableRow","TableCell","align","TableBody","map","item","selected","key","itemClick","cases","Component","top","containerStyle","radioStyle","SeriesChart","chartRef","type","handleLinearClick","linearLogToggleClicked","handleLogClick","series","labels","casesData","deathsData","cumulativeCasesData","cumulativeDeathsData","timeline","date","replace","deaths","cumulativeCases","cumulativeDeaths","datasets","borderColor","borderWidth","fill","data","options","animation","duration","responsive","maintainAspectRatio","legend","display","text","scales","xAxes","yAxes","ticks","callback","value","values","RadioGroup","onChange","handleRadioChange","FormControlLabel","control","Radio","color","createChartData","CovidData","filepath","readBigDataFile","timelineItem","dates","keys","newTimeline","csvText","previousCases","previousDeaths","previousCounty","previousState","stateData","tokens","nationalSeries","statesData","lines","split","linesArray","j","countyName","stateName","parseInt","pc","pd","newItem","addToSeries","countiesData","countySeries","allCounties","optimizeSeries","allStates","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","receivedBigDataFile","responseText","alert","open","send","MyLink","handleClick","reportOutboundLink","target","children","App","calcStatesList","calcCountiesList","handleStateSelected","handleCountySelected","result","countyData","covidData","statesList","selectedState","selectedCounty","className","alt","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3fdd3677.chunk.js","sourcesContent":["class Analytics {\n\treportEvent(event, category, label) {\n\t\t// console.log(\"Analytics\", event, category, label);\n\t\t// eslint-disable-next-line no-undef\n\t\tgtag(\"event\", event, {\n\t\t\tevent_category: category || \"engagement\",\n\t\t\tevent_label: label,\n\t\t\ttransport_type: \"beacon\"\t\t\t\n\t\t});\n\t\t// BTW, setting the transport method to \"beacon\" lets the hit be sent\n\t\t// using \"navigator.sendBeacon\" in browsers that support it.\n\t}\n\n\treportOutboundLink(url) {\n\t\tthis.reportEvent(\"click\", \"outbound\", url);\n\t}\n\n\tselectCount = {};\n\n\titemSelected(name) {\n\t\tvar count = this.selectCount[name] || 0;\n\t\tcount += 1;\n\t\tthis.selectCount[name] = count;\n\t\tif (count === 1) {\n\t\t\tthis.reportEvent(\"table_select_1\", null, name)\n\t\t} else if (count === 5) {\n\t\t\tthis.reportEvent(\"table_select_5\", null, name)\n\t\t}\n\t}\n\n\tlinlogCount = 0;\n\n\tlinearLogToggleClicked() {\n\t\tthis.linlogCount += 1;\n\t\tif (this.linlogCount === 1) {\n\t\t\tthis.reportEvent(\"linlog_click_1\")\n\t\t} else if (this.linlogCount === 5) {\n\t\t\tthis.reportEvent(\"linlog_click_5\")\n\t\t}\n\t}\n\n\tarrowCount = 0;\n\n\tarrowClicked() {\n\t\tthis.arrowCount += 1;\n\t\tif (this.arrowCount === 1) {\n\t\t\tthis.reportEvent(\"arrow_click_1\")\n\t\t} else if (this.arrowCount === 5) {\n\t\t\tthis.reportEvent(\"arrow_click_5\")\n\t\t}\n\t}\n\n\tstatic instance;\n}\n\nif (!Analytics.instance) {\n\tAnalytics.instance = new Analytics();\n};\n\nexport default Analytics.instance;\n","import React from 'react';\nimport { \n\tLink,\n\tTable,\n\tTableHead,\n\tTableBody,\n\tTableRow,\n\tTableCell,\n\tTableContainer\n} from '@material-ui/core';\nimport './App.css';\nimport Analytics from './Analytics';\n\nconst slimStyle = {height: \"0px\", padding: \"0px\"};\nconst buttonsStyle = {position: \"relative\", left: \"70px\", fontSize: \"20px\"};\nconst regionTableStyle = {\n   \theight: \"500px\",\n    maxHeight: \"500px\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n\tborderRadius: \"10px\"\n};\n\nexport default class RegionTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectedIndex = 0;\n\t\tthis.style = Object.assign({backgroundColor: props.backgroundColor}, regionTableStyle);\n\t\tthis.state = {\n\t\t\tselection: this.props.list[this.selectedIndex].name,\n\t\t\tlist: this.createSortedList(\"cases\", false), \n\t\t\tsortBy: \"cases\",\n\t\t\tsortAscending: false\n\t\t};\n\t    this.handleCellClick = this.handleCellClick.bind(this);\t\t\n\t    this.select = this.select.bind(this);\t\t\n\t    this.handleNextClick = this.handleNextClick.bind(this);\t\t\n\t    this.handlePrevClick = this.handlePrevClick.bind(this);\t\t\n\t    this.toggleSort = this.toggleSort.bind(this);\n\t    this.selectedRef = React.createRef();\n\t    this.tableContainerRef = React.createRef();\n\t}\n\n\tsortArray(array, property, numeric, ascending) {\n\t\tvar newArray = [];\n\t\tfor (var i = 0; i < array.length; i += 1) {\n\t\t\tnewArray.push(Object.assign({}, array[i]));\n\t\t}\n\n\t\tif (!numeric) {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\tif (a[property] < b[property]) {\n\t\t\t\t\treturn ascending ? -1 : 1;\n\t\t\t\t} else if (a[property] > b[property]) {\n\t\t\t\t\treturn ascending ? 1 : -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\treturn ascending ? a[property] - b[property] : b[property] - a[property];\n\t\t\t});\n\t\t}\n\t\treturn newArray;\n\t}\n\n\tselect(name) {\n\t\tthis.setState({selection: name});\n\t\tthis.props.onSelected(name);\n\t}\n\n\thandleCellClick(e, name) {\n\t\tAnalytics.itemSelected(this.props.title, name);\n\t\tthis.select(name);\n\t}\n\n\tfindSelectedIndex() {\n\t\tfor (var i = 0; i < this.state.list.length; i += 1) {\n\t\t\tif (this.state.list[i].name === this.state.selection) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n \t\t// alert(\"error\");\n\t}\n\n\thandleNextClick(e) {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index < this.state.list.length - 1) {\n\t\t\tindex += 1;\n\t\t}\n\t\tthis.select(this.state.list[index].name);\t\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandlePrevClick(e) {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index > 0) {\n\t\t\tindex -= 1;\n\t\t}\n\t\tthis.select(this.state.list[index].name);\t\n\t\tAnalytics.arrowClicked();\n\t}\n\n\ttoggleSort() {\n\t\tif (this.state.sortBy === \"cases\") {\n\t\t\tthis.setState({sortBy: \"name\", sortAscending: true});\n\t\t} else {\n\t\t\tthis.setState({sortBy: \"cases\", sortAscending: false});\n\t\t}\n\t}\n\n\tcreateSortedList(sortBy, ascending) {\n\t\tif (sortBy === \"cases\") {\n\t\t\treturn this.sortArray(this.props.list, \"cases\", true, ascending);\n\t\t} else {\n\t\t\treturn this.sortArray(this.props.list, \"name\", false, ascending);\n\t\t}\n\t}\n\n\tensureSelectionVisible() {\n\t\tconst container = this.tableContainerRef.current;\n\t\tconst row = this.selectedRef.current;\n\t\tif (!row) return;\n\t\tconst containerVisibleHeight = container.scrollHeight - container.scrollTopMax;\n\t\tconst rowBottom = row.offsetTop + row.offsetHeight;\n\t\tif (rowBottom < (container.scrollTop + containerVisibleHeight) && (row.offsetTop - row.offsetHeight) > container.scrollTop) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.selectedRef.current.scrollIntoView();\n\t\tif (container.scrollTop < (row.offsetTop + 100) && container.scrollTop !== container.scrollTopMax) {\n\t\t\tthis.tableContainerRef.current.scrollBy(0, -100);\n\t\t}\n\t}\n\n\tlistsEqual(a, b) {\n\t\treturn (a.length === b.length) && (a.length === 0 || (a[0].name === b[0].name));\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tvar listChanged = !this.listsEqual(prevProps.list, this.props.list);\n\t\tif ((prevState.sortBy !== this.state.sortBy) || (prevState.sortAscending !== this.state.sortAscending) || listChanged) {\n\t\t\tthis.setState({list: this.createSortedList(this.state.sortBy, this.state.sortAscending)});\n\t\t}\n\t\tif (listChanged) {\n\t\t\tthis.selectedIndex = 0;\n\t\t\tthis.select(this.state.list[this.selectedIndex].name);\t\n\t\t}\n\t\tthis.ensureSelectionVisible();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.onSelected(this.state.selection);\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<div style={buttonsStyle}>\n\t\t\t\t<Link href=\"#\" onClick={this.handlePrevClick}>◀</Link>\n\t\t\t\t&nbsp;\n\t\t\t\t<Link href=\"#\" onClick={this.handleNextClick}>▶</Link>\n\t\t\t</div>\n\t\t\t<TableContainer ref={this.tableContainerRef} style={this.style}>\n\t\t\t\t<Table stickyHeader style={slimStyle} size=\"small\">\n\t\t\t\t\t<TableHead>\n            \t\t\t<TableRow style={slimStyle}>\n              \t\t\t\t<TableCell style={slimStyle} onClick={this.toggleSort} align=\"left\">{this.props.title}{this.state.sortBy === \"name\" ? \"▲\" : \"\"}</TableCell>\n              \t\t\t\t<TableCell style={slimStyle} onClick={this.toggleSort} align=\"right\">{this.state.sortBy === \"cases\" ? \"▼\" : \"\"}Cases</TableCell>\n            \t\t\t</TableRow>            \n     \t\t\t\t</TableHead>\n\n\t\t\t\t\t<TableBody>\n\t  \t\t\t\t\t{this.state.list.map((item) => {\n\t  \t\t\t\t\t\tvar selected = item.name === this.state.selection;\n\n\t\t\t\t\t  \t\treturn <TableRow ref={selected ? this.selectedRef : null} selected={selected} style={slimStyle} key={item.name} onClick={this.props.itemClick}>\n\t\t\t\t\t\t\t\t<TableCell style={slimStyle} align=\"left\" onClick={(e) => this.handleCellClick(e, item.name)}>{item.name}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={slimStyle} align=\"right\" onClick={(e) => this.handleCellClick(e, item.name)}>{item.cases}</TableCell>\n\t\t\t\t  \t\t\t</TableRow>\n\t\t\t\t\t    })}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</div>);\n\t}\n}\n","import React from 'react';\nimport {Line} from 'react-chartjs-2';\nimport './App.css';\nimport { FormControlLabel, Radio, RadioGroup } from '@material-ui/core';\nimport Analytics from './Analytics';\n\nconst buttonsStyle = {position: \"absolute\", left: \"10px\", top: \"5px\"};\nconst containerStyle = {position: \"relative\", top: \"0px\"};\nconst radioStyle = {height: \"25px\"};\n\nclass SeriesChart extends React.Component {\n\n\tchartRef = React.createRef();\n\tstate = {type: \"linear\"};\n\t\n\tcreateChartData (series) {\n\t\tvar labels = [];\n\t\tvar casesData = [];\n\t\tvar deathsData = [];\n\t\tvar cumulativeCasesData = [];\n\t\tvar cumulativeDeathsData = [];\n\t\tfor (var i = 0; i < series.timeline.length; i += 1) {\n\t\t\tvar item = series.timeline[i];\n\t\t\tlabels.push(item.date.replace(/2020-/, \"\"));\n\t\t\tcasesData.push(item.cases);\n\t\t\tdeathsData.push(item.deaths);\n\t\t\tcumulativeCasesData.push(item.cumulativeCases);\n\t\t\tcumulativeDeathsData.push(item.cumulativeDeaths);\n\t\t}\n\n\t\treturn {\n\t\t\tlabels: labels,\n\t\t\tdatasets: [{\n\t\t\t\tlabel: 'Daily New Cases',\n\t\t\t\tbackgroundColor: \"000000\",\n\t\t\t\tborderColor: 'rgba(75,75,192,0.5)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tfill: false,\n\t\t\t\tdata: casesData\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Daily Deaths',\n\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\tborderColor: 'rgba(75,150,75,0.5)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tfill: false,\n\t\t\t\tdata: deathsData\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Cumulative Cases',\n\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\tborderColor: 'rgba(200,200,100,0.5)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tfill: false,\n\t\t\t\tdata: cumulativeCasesData\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'Cumulative Deaths',\n\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\tborderColor: 'rgba(100,30,30,0.5)',\n\t\t\t\tborderWidth: 2,\n\t\t\t\tfill: false,\n\t\t\t\tdata: cumulativeDeathsData\n\t\t\t}]\n\t\t};\n\t}\n\n\thandleLinearClick = () => {\n\t\tAnalytics.linearLogToggleClicked();\n    \tthis.setState({type: \"linear\"});\n\t}\n\n\thandleLogClick = () => {\n\t\tAnalytics.linearLogToggleClicked();\n\t\tthis.setState({type: \"logarithmic\"});\n\t}\n\n\trender() {\n\t    const options = {\n\t\t\tanimation: {\n\t\t\t\tduration: 300\n\t\t\t},\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: true,\n\t\t\t/* onResize: (x) => console.log(\"resize\", x), */\n\t\t\tlegend: {position: 'top'},\n\t\t\ttitle: {display: true, text: this.props.title},\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\tdisplay: true\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\ttype: this.state.type,\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: function(value, index, values) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t};\n\n\t\treturn (<div style={containerStyle}>\n\t\t\t<div style={buttonsStyle}>\n\t\t        <RadioGroup value={this.state.type} onChange={this.handleRadioChange}>\n\t\t          <FormControlLabel control={<Radio color=\"default\"/>} size=\"small\" style={radioStyle} value=\"linear\" label=\"Linear\" onClick={this.handleLinearClick}/>\n\t\t          <FormControlLabel control={<Radio color=\"default\"/>} size=\"small\" style={radioStyle} value=\"logarithmic\" label=\"Log\" onClick={this.handleLogClick}/>\n\t\t        </RadioGroup>\n\t\t\t</div>\n\t\t\t{this.props.series && <Line ref={this.chartRef} options={options} data={this.createChartData(this.props.series)}/>}\n\t\t</div>);\n\t}\n}\t\n\nexport default SeriesChart;\n\n","export default class CovidData {\n\n\t// This class reads a covid states/counties data file, and parses\n\t// the file into a data structure like this:\n\t//\n\t// {\n\t// \tAlabama: {\n\t// \t\tcountiesData: {\n\t//\t \t\t\" All counties\": Series,\n\t// \t\t\tAlameda: Series,\n\t// \t\t\tMarin: Series,\n\t// \t\t\t...\n\t// \t\t},\n\t// \t},\n\t//  Alaska ...,\n\t//  ...\n\t//  \" All states\": { ... }\n\t// }\n\t//\n\t// \"Series\" is like this \n\t// {\n\t// \t\ttimeline: [{date: ..., cases: ..., deaths: ..., totalCases: ..., totalDeaths: ...}, ...]\n\t// \t\tcases: nnn\n\t// \t\tdeaths: nnn\n\t// }\n\t//\n\t// Once the data is available, we call the \"callback\" function \n\t// with the data structure as the parameter.\n\n\tstatic allCounties = \" All counties\"; // the leading space makes it sort first.\n\tstatic allStates = \" All states\";\n\n\tconstructor(filepath, callback) {\n\t\tthis.callback = callback;\n\t\tthis.readBigDataFile(filepath);\n\t}\n\n\t/*private*/ addToSeries(series, item) {\n\t\tseries.deaths += item.deaths;\n\t\tseries.cases += item.cases;\n\t\tvar timelineItem = series.timeline[item.date];\n\t\tif (!timelineItem) {\n\t\t\ttimelineItem = {date: item.date, cases: item.cases, deaths: item.deaths,\n\t\t\t\tcumulativeCases: item.cumulativeCases, cumulativeDeaths: item.cumulativeDeaths};\n\t\t\tseries.timeline[item.date] = timelineItem;\n\t\t} else {\n\t\t\ttimelineItem.deaths += item.deaths;\n\t\t\ttimelineItem.cases += item.cases;\n\t\t\ttimelineItem.cumulativeCases += item.cumulativeCases;\n\t\t\ttimelineItem.cumulativeDeaths += item.cumulativeDeaths;\n\t\t}\n\t}\n\n\t/*private*/ optimizeSeries(series) {\n\t\tvar dates = Object.keys(series.timeline).sort();\n\t\tvar newTimeline = [];\n\t\tfor (var i = 0; i < dates.length; i += 1) {\n\t\t\tnewTimeline.push(series.timeline[dates[i]]);\n\t\t}\n\t\tseries.timeline = newTimeline;\n\t}\n\n\t// csv columns are: date,county,state,fips,cases,deaths\n\t/*private*/ receivedBigDataFile(csvText) {\n\t\tvar previousCases;\n\t\tvar previousDeaths;\n\t\tvar previousCounty;\n\t\tvar previousState;\n\t\tvar stateData;\n\t\tvar nationalSeries = {timeline: [], cases: 0, deaths: 0};\n\t\tvar statesData = {};\n\t\tvar tokens;\n\t\tvar lines = csvText.split(/[\\n\\r]+/);\n\t\tvar linesArray = [];\n\t\tfor (var i = 0; i < lines.length; i += 1) {\n\t\t\ttokens = lines[i].split(/,/);\n\t\t\tif (tokens.length !== 6) continue;\n\t\t\tif (tokens[0] === \"date\") continue;\n\t\t\tlinesArray.push(tokens);\n\t\t}\n\t\tlinesArray.sort((a, b) => {\n\t\t\tif (a[2] > b[2]) return 1;\n\t\t\tif (a[2] < b[2]) return -1;\n\t\t\tif (a[1] > b[1]) return 1;\n\t\t\tif (a[1] < b[1]) return -1;\n\t\t\tif (a[0] > b[0]) return 1;\n\t\t\tif (a[0] < b[0]) return -1;\n\t\t\treturn 0;\n\t\t});\n\n\t\tfor (var j = 0; j < linesArray.length; j += 1) {\n\t\t\ttokens = linesArray[j];\n\t\t\tconst date = tokens[0];\n\t\t\tconst countyName = tokens[1];\n\t\t\tconst stateName = tokens[2];\n\t\t\t// we don't use fips which is tokens[3]\n\t\t\tvar cases = parseInt(tokens[4], 10);\n\t\t\tvar deaths = parseInt(tokens[5], 10);\n\n\t\t\tif (countyName !== previousCounty || stateName !== previousState) {\n\t\t\t\tpreviousCounty = countyName;\n\t\t\t\tpreviousState = stateName;\n\t\t\t\tpreviousCases = 0;\n\t\t\t\tpreviousDeaths = 0;\n\t\t\t}\n\t\t\tvar pc = previousCases;\n\t\t\tvar pd = previousDeaths;\n\t\t\tpreviousCases = cases;\n\t\t\tpreviousDeaths = deaths;\n\t\t\tcases -= pc;\n\t\t\tdeaths -= pd;\n\n\t\t\tvar newItem = {date: date, cases: cases, deaths: deaths, cumulativeCases: previousCases, cumulativeDeaths: previousDeaths};\n\n\t\t\tthis.addToSeries(nationalSeries, newItem);\n\n\t\t\tstateData = statesData[stateName];\n\t\t\tif (!stateData) {\n\t\t\t\tstateData = {series: {timeline: [], cases: 0, deaths: 0}, countiesData: {}};\n\t\t\t\tstatesData[stateName] = stateData;\n\t\t\t}\n\t\t\tthis.addToSeries(stateData.series, newItem);\n\n\t\t\tvar countySeries = stateData.countiesData[countyName];\n\t\t\tif (!countySeries) {\n\t\t\t\tcountySeries = {timeline: [], cases: 0, deaths: 0};\n\t\t\t\tstateData.countiesData[countyName] = countySeries;\n\t\t\t}\n\t\t\tthis.addToSeries(countySeries, newItem);\n\t\t}\n\n\t\tfor (var stateName in statesData) {\n\t\t\tstateData = statesData[stateName];\n\t\t\tstateData.countiesData[CovidData.allCounties] = stateData.series;\n\t\t\tdelete stateData.series;\n\t\t\tfor (var b in stateData.countiesData) {\n\t\t\t\tthis.optimizeSeries(stateData.countiesData[b]);\n\t\t\t}\n\t\t}\n\t\tthis.optimizeSeries(nationalSeries);\n\t\tstatesData[CovidData.allStates] = {countiesData: {[CovidData.allCounties]: nationalSeries}};\n\t\tthis.callback({statesData: statesData});\n\t}\n\n\t/*private*/ readBigDataFile(filepath) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.onreadystatechange = () => {\n\t\t\tif(xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || (status >= 200 && status < 400)) {\n\t\t\t\t\t// The request has been completed successfully\n\t\t\t\t\tthis.receivedBigDataFile(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Couldn't fetch data file: status\", status);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.open(\"GET\", filepath);\n\t\txhr.send();\n\t}\n}\n","import React from 'react';\nimport {Link} from '@material-ui/core';\nimport Analytics from './Analytics';\n\nexport default class MyLink extends React.Component {\n\thandleClick = () => {\n\t\tAnalytics.reportOutboundLink(this.props.href);\n\t}\n\n\trender() {\n\t\treturn <Link target={this.props.target} href={this.props.href} onClick={this.handleClick}>\n\t\t\t{this.props.children}\n\t\t</Link>\n\t}\n}\n","import React from 'react';\nimport RegionTable from './RegionTable';\nimport SeriesChart from './SeriesChart';\nimport CovidData from './CovidData';\nimport MyLink from './MyLink';\nimport './App.css';\n\nconst development = false;\n// for development=false, set package.json.homepage = \"https://mark-shepherd.com/covid-stats\" (formerly markshepherd.github.io)\n// for development=true, set package.json.homepage = \"\"\nconst pathPrefix = development ? \"build/\" : \"\";\nconst dataDate = \"4-9-20\";\nconst uiDate = \"Apr 9, 2020\"\n\n\nclass App extends React.Component {\n\t/* this.state = \n\t\t{\n\t\t\tstatesData,\n\t\t\tstatesList,\n\t\t\tselectedState,\n\t\t\tselectedCounty\n\t \t}\n\t*/\n\n\tconstructor(props) {\t\n\t\tsuper(props);\n\t\tthis.state = {};\n\t\tthis.calcStatesList = this.calcStatesList.bind(this);\t\t\n\t\tthis.calcCountiesList = this.calcCountiesList.bind(this);\t\t\n\t\tthis.handleStateSelected = this.handleStateSelected.bind(this);\t\t\n\t\tthis.handleCountySelected = this.handleCountySelected.bind(this);\t\n\t}\n\n\tcalcStatesList(statesData) {\n\t\tconst result = [];\n\t\tconst keys = Object.keys(statesData).sort();\n\t\tfor (var i = 0; i < keys.length; i += 1) {\n\t\t\tconst stateName = keys[i];\n\t\t\tconst stateData = statesData[stateName];\n\t\t\tresult.push({name: stateName, cases: stateData.countiesData[CovidData.allCounties].cases});\n\t\t}\n\t\treturn result;\n\t}\n\n\tcalcCountiesList(statesData, stateName) {\n\t\tconst stateData = statesData[stateName];\n\t\tconst result = [];\n\t\tconst keys = Object.keys(stateData.countiesData).sort();\n\t\tfor (var i = 0; i < keys.length; i += 1) {\n\t\t\tconst countyName = keys[i];\n\t\t\tconst countyData = stateData.countiesData[countyName];\n\t\t\tresult.push({name: countyName, cases: countyData.cases});\n\t\t}\n\t\treturn result;\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.covidData = new CovidData(`${pathPrefix}us-counties-${dataDate}.csv`, (data) => {\n\t\t\tdata.statesList = this.calcStatesList(data.statesData);\n\t\t\tthis.setState(data);\n\t\t});\n\t}\n\n\thandleStateSelected(stateName) {\n\t\tthis.setState({selectedState: stateName});\n\t}\n\n\thandleCountySelected(countyName) {\n\t\tthis.setState({selectedCounty: countyName});\n\t}\n\n\trender() {\n\t\tvar title = (this.state.selectedCounty === CovidData.allCounties) \n\t\t\t? this.state.selectedState + \",\" + this.state.selectedCounty\n\t\t\t: this.state.selectedState + \", \" + this.state.selectedCounty + \" county\";\n\n\t\treturn (\n\t\t\t<div className=\"app\"> \n\t\t\t\t<div className=\"header\">\n\t\t\t\t\t<span className=\"myheader\">Covid-19 Statistics by U.S. State and County</span>\n\t\t\t\t\t<br/>\n\t\t\t\t\tLast updated {uiDate}.\n\t\t\t\t</div>\n\n\t\t\t\t{this.state.statesList && <div className=\"state\">\n\t\t\t\t\t<RegionTable backgroundColor=\"#ffffe0\" title=\"State\"\n\t\t\t\t\t\tlist={this.state.statesList} onSelected={this.handleStateSelected}/></div>}\n\n\t\t\t\t{this.state.selectedState && <div className=\"county\">\n\t\t\t\t\t<RegionTable backgroundColor=\"#fffff4\" title=\"County\"\n\t\t\t\t\t\tlist={this.calcCountiesList(this.state.statesData, this.state.selectedState)}\n\t\t\t\t\t\tonSelected={this.handleCountySelected}/></div>}\n\n\t\t\t\t{this.state.selectedCounty && <div className=\"chart\">\n\t\t\t\t\t<SeriesChart\n\t\t\t\t\t\ttitle={title}\n\t\t\t\t\t\tseries={this.state.statesData[this.state.selectedState].countiesData[this.state.selectedCounty]}/></div>}\n\n\t\t\t\t<div className=\"notes\">\n\t\t\t\t\t<div className=\"notesText\">\n\t\t\t\t\t\t<p>Created by \n\t\t\t\t\t\t<MyLink target=\"_blank\" href=\"mailto:markcharts591@gmail.com\"> Mark Shepherd</MyLink>.\n\t\t\t\t\t\tThe source code is <MyLink target=\"_blank\" href=\"https://github.com/markshepherd/CovidStats\"> here</MyLink>.\n\t\t\t\t\t\tData is provided by the <MyLink target=\"_blank\" href=\"https://github.com/nytimes/covid-19-data\"> New York Times</MyLink>.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\tFor the finest blend of country, gospel, and sea chanties,\n\t\t\t\t\t\ttry<MyLink target=\"_blank\" href=\"https://larkdales.com/\"> The&nbsp;Larkdales</MyLink>...\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"socialIcons\">\n\t\t\t\t\t\t<MyLink target=\"_blank\" href=\"https://twitter.com/MarkEShepherd\">\n\t\t\t\t\t\t \t<img className=\"socialIcon\"\n\t\t\t\t\t\t \t\talign=\"right\"\n\t\t\t\t\t\t \t\talt=\"Go to Mark's Twitter\"\n\t\t\t\t\t\t  \t\tsrc={`${pathPrefix}Twitter_Social_Icon_Circle_Color.svg`}/>\n\t\t\t\t\t\t</MyLink>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<MyLink target=\"_blank\" href=\"https://open.spotify.com/album/7eAJ5qb0vFuN2K7iBrjbOu\">\n\t\t\t\t\t\t \t<img className=\"socialIcon\"\n\t\t\t\t\t\t \t\talign=\"right\"\n\t\t\t\t\t\t \t\talt=\"Go to The Larkdales on Spotify\"\n\t\t\t\t\t\t  \t\tsrc={`${pathPrefix}Spotify_Icon_RGB_Green.svg`}/>\n\t\t\t\t\t\t</MyLink>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}