{"version":3,"sources":["Analytics.js","AboutDialog.js","CovidData.js","GestureHandler.js","LoadingDialog.js","MyLink.js","RegionMenu.js","RegionTable.js","SeriesChart.js","Utils.js","App.js","serviceWorker.js","index.js"],"names":["Analytics","enabled","selectCount","counts","hideshow_dataset_click","date_slider_click","linlog_click","arrow_click","this","event","category","label","gtag","event_category","event_label","transport_type","url","reportEvent","name","count","eventName","countableEvent","instance","AboutDialog","handleCloseButton","props","onCloseButton","noop","something","aboutDialogOpened","Dialog","onClose","open","aria-labelledby","DialogTitle","id","DialogContent","dividers","children","DialogActions","Button","autoFocus","onClick","color","React","Component","CovidData","filepath","callback","readBigDataFile","series","item","deaths","cases","timelineItem","timeline","date","cumulativeCases","cumulativeDeaths","dates","Object","keys","sort","newTimeline","i","length","push","csvText","previousCases","previousDeaths","previousCounty","previousState","stateData","tokens","nationalSeries","statesData","latestDate","lines","split","linesArray","a","b","j","countyName","stateName","parseInt","pc","pd","newItem","addToSeries","countiesData","countySeries","allCounties","optimizeSeries","allStates","xhr","XMLHttpRequest","onreadystatechange","readyState","DONE","status","receivedBigDataFile","responseText","alert","send","MyLink","handleClick","reportOutboundLink","href","Link","target","RegionMenu","select","setState","selection","onSelected","handleDownClick","e","index","findSelectedIndex","list","arrowClicked","handleUpClick","handleSelectChanged","currentTarget","textContent","menuSelection","componentDidMount","state","componentDidUpdate","prevProps","prevState","snapshot","listsEqual","FormControl","Select","className","labelId","value","onChange","map","MenuItem","key","slimStyle","height","padding","RegionTable","selectedIndex","createSortedList","sortBy","sortAscending","handleCellClick","bind","handleNextClick","handlePrevClick","toggleSort","selectedRef","createRef","tableContainerRef","array","property","numeric","ascending","newArray","assign","itemSelected","title","sortArray","container","current","row","containerVisibleHeight","scrollHeight","scrollTopMax","offsetTop","offsetHeight","scrollTop","scrollIntoView","scrollBy","listChanged","ensureSelectionVisible","tableClasses","extra","TableContainer","ref","Table","stickyHeader","style","size","TableHead","TableRow","TableCell","align","TableBody","selected","itemClick","SeriesChart","isHidden","0","1","2","3","4","5","handleLogChanged","linearLogToggleClicked","type","handleCumulativeChanged","cumulative","checked","handleChartClick","setTimeout","datasets","hidden","chartRef","chartInstance","isDatasetVisible","myId","hideShowDatasetClicked","handleSliderChanged","movingAverageDays","smooth","handleSmoothChanged","number","half","Math","floor","result","sum","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","labels","casesData","deathsData","cumulativeCasesData","cumulativeDeathsData","replace","datasetLabels","minY","undefined","maxY","backgroundColor","borderColor","borderWidth","fill","data","calcMovingAverage","origData","findMin","findMax","chartData","createChartData","options","animation","duration","responsive","maintainAspectRatio","aspectRatio","legend","position","small","display","text","fontSize","layout","left","right","top","bottom","scales","xAxes","yAxes","ticks","suggestedMin","suggestedMax","values","checkboxLabelPlacement","FormControlLabel","labelPlacement","control","Checkbox","onTitleClick","Typography","variant","appTitle","updateDate","disabled","Slider","step","track","defaultValue","Utils","development","window","location","toString","match","enable","MyTooltip","withStyles","theme","tooltip","palette","common","white","boxShadow","shadows","Tooltip","FormatSliderValue","popperRef","useRef","useEffect","update","placement","PopperProps","App","sliderRef","stateMenuRef","countyMenuRef","handleStateSelectChanged","handleStateSelected","handleCountySelectChanged","handleCountySelected","handleCountyDownClick","findSelectedCountyIndex","countiesList","handleCountyUpClick","handleStateDownClick","findSelectedStateIndex","statesList","handleStateUpClick","handleAboutCloseButton","aboutOpen","handleTitleClick","handleSwipeLeft","handleSwipeRight","handleSwipeDown","handleSwipeUp","calcStatesList","calcCountiesList","handleSliderCommited","trimToStartDate","mql","matchMedia","matches","startDate","isLoading","selectedState","selectedCounty","countyNames","countyData","covidData","nationalTimeline","dateList","addListener","dateSliderUsed","findIndex","element","slice","desiredIndex","findDateIndex","currentIndex","unshift","aboutInfo","Fragment","alt","src","xmlns","viewBox","d","onChangeCommitted","valueLabelDisplay","valueLabelFormat","ValueLabelComponent","chartTitle","Boolean","hostname","createMuiTheme","typography","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6989be4.chunk.js","sourcesContent":["class Analytics {\n\tenabled = true;\n\n\tenable(enabled) {\n\t\tthis.enabled = enabled;\n\t}\n\n\treportEvent(event, category, label) {\n\t\t// console.log(\"Analytics\", event, category, label);\n\t\tif (this.enabled) {\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tgtag(\"event\", event, {\n\t\t\t\tevent_category: category || \"engagement\",\n\t\t\t\tevent_label: label,\n\t\t\t\ttransport_type: \"beacon\"\t\t\t\n\t\t\t});\n\t\t\t// BTW, setting the transport method to \"beacon\" lets the hit be sent\n\t\t\t// using \"navigator.sendBeacon\" in browsers that support it.\n\t\t}\n\t}\n\n\treportOutboundLink(url) {\n\t\tthis.reportEvent(\"click\", \"outbound\", url);\n\t}\n\n\tselectCount = {};\n\n\titemSelected(name) {\n\t\tvar count = this.selectCount[name] || 0;\n\t\tcount += 1;\n\t\tthis.selectCount[name] = count;\n\t\tif (count === 1) {\n\t\t\tthis.reportEvent(\"table_select_1\", null, name)\n\t\t} else if (count === 5) {\n\t\t\tthis.reportEvent(\"table_select_5\", null, name)\n\t\t}\n\t}\n\n\tcounts = {\n\t\thideshow_dataset_click: 0,\n\t\tdate_slider_click: 0,\n\t\tlinlog_click: 0,\n\t\tarrow_click: 0\n\t};\n\n\tcountableEvent(eventName) {\n\t\tthis.counts[eventName] += 1;\n\t\tif (this.counts[eventName] === 1) {\n\t\t\tthis.reportEvent(`${eventName}_1`)\n\t\t} else if (this.counts[eventName] === 5) {\n\t\t\tthis.reportEvent(`${eventName}_5`)\n\t\t}\n\t}\n\n\thideShowDatasetClicked() {\n\t\tthis.countableEvent(\"hideshow_dataset_click\");\n\t}\n\n\tdateSliderUsed() {\n\t\tthis.countableEvent(\"date_slider_click\");\n\t}\n\n\tlinearLogToggleClicked() {\n\t\tthis.countableEvent(\"linlog_click\");\n\t}\n\n\tarrowClicked() {\n\t\tthis.countableEvent(\"arrow_click\");\n\t}\n\n\tmenuSelection() {\n\t\tthis.countableEvent(\"menu_selection\");\n\t}\n\n\taboutDialogOpened() {\n\t\tthis.countableEvent(\"about_dialog\");\n\t}\n\n\tstatic instance;\n}\n\nif (!Analytics.instance) {\n\tAnalytics.instance = new Analytics();\n};\n\nexport default Analytics.instance;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Analytics from './Analytics';\n\nexport default class AboutDialog extends React.Component {\n\thandleCloseButton = () =>{\n\t\tthis.props.onCloseButton();\n\t}\n\n\tnoop = (something) => {\n\t\tAnalytics.aboutDialogOpened();\n\t\treturn something;\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Dialog onClose={this.handleCloseButton} open={this.noop(this.props.open)} aria-labelledby=\"customized-dialog-title\">\n\t\t\t\t<DialogTitle id=\"customized-dialog-title\" onClose={this.handleCloseButton}>\n\t\t\t\t\tCovid-19 Statistics for U.S. States & Counties \n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent dividers>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button autoFocus onClick={this.handleCloseButton} color=\"primary\">\n\t\t\t\t\tDismiss\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t)\n\t};\n}\n","export default class CovidData {\n\t// This class reads a covid states/counties data file, and parses\n\t// the file into the \"statesData\" data structure, which like this:\n\t//\n\t// statesData =\n\t// {\n\t// \tAlabama: {\n\t// \t\tcountiesData: {\n\t// \t\t\t\" All counties\": Series,\n\t// \t\t\tAlameda: Series,\n\t// \t\t\tMarin: Series,\n\t// \t\t\tetc...\n\t// \t\t}\n\t// \t},\n\t// \tAlaska ...,\n\t// \tetc...\n\t// \t\" All states\": { ... }\n\t// }\n\t//\n\t// \"Series\" is like this \n\t// {\n\t// \ttimeline: [{date: ..., cases: ..., deaths: ..., totalCases: ..., totalDeaths: ...}, ...]\n\t// \tcases: nnn\n\t// \tdeaths: nnn\n\t// }\n\n\tstatic allCounties = \" All counties\"; // the leading space makes it sort first.\n\tstatic allStates = \" All states\";\n\n\t// The constructor starts loading the data file from the server.\n\t// Once the data is available, the \"callback\" function is called.\n\t// Callback parameters are (statesData, latestDate)\n\tconstructor(filepath, callback) {\n\t\tthis.callback = callback;\n\t\tthis.readBigDataFile(filepath);\n\t}\n\n\t/*private*/ addToSeries(series, item) {\n\t\tseries.deaths += item.deaths;\n\t\tseries.cases += item.cases;\n\t\tvar timelineItem = series.timeline[item.date];\n\t\tif (!timelineItem) {\n\t\t\ttimelineItem = {date: item.date, cases: item.cases, deaths: item.deaths,\n\t\t\t\tcumulativeCases: item.cumulativeCases, cumulativeDeaths: item.cumulativeDeaths};\n\t\t\tseries.timeline[item.date] = timelineItem;\n\t\t} else {\n\t\t\ttimelineItem.deaths += item.deaths;\n\t\t\ttimelineItem.cases += item.cases;\n\t\t\ttimelineItem.cumulativeCases += item.cumulativeCases;\n\t\t\ttimelineItem.cumulativeDeaths += item.cumulativeDeaths;\n\t\t}\n\t}\n\n\t/*private*/ optimizeSeries(series) {\n\t\tvar dates = Object.keys(series.timeline).sort();\n\t\tvar newTimeline = [];\n\t\tfor (var i = 0; i < dates.length; i += 1) {\n\t\t\tnewTimeline.push(series.timeline[dates[i]]);\n\t\t}\n\t\tseries.timeline = newTimeline;\n\t}\n\n\t// csv columns are: date,county,state,fips,cases,deaths\n\t/*private*/ receivedBigDataFile(csvText) {\n\t\tvar previousCases;\n\t\tvar previousDeaths;\n\t\tvar previousCounty;\n\t\tvar previousState;\n\t\tvar stateData;\n\t\tvar nationalSeries = {timeline: [], cases: 0, deaths: 0};\n\t\tvar statesData = {};\n\t\tvar latestDate = \"2020-01-01\";\n\t\tvar tokens;\n\t\tvar lines = csvText.split(/[\\n\\r]+/);\n\t\tvar linesArray = [];\n\t\tfor (var i = 0; i < lines.length; i += 1) {\n\t\t\ttokens = lines[i].split(/,/);\n\t\t\tif (tokens.length !== 6) continue;\n\t\t\tif (tokens[0] === \"date\") continue;\n\t\t\tlinesArray.push(tokens);\n\t\t}\n\t\tlinesArray.sort((a, b) => {\n\t\t\tif (a[2] > b[2]) return 1;\n\t\t\tif (a[2] < b[2]) return -1;\n\t\t\tif (a[1] > b[1]) return 1;\n\t\t\tif (a[1] < b[1]) return -1;\n\t\t\tif (a[0] > b[0]) return 1;\n\t\t\tif (a[0] < b[0]) return -1;\n\t\t\treturn 0;\n\t\t});\n\n\t\tfor (var j = 0; j < linesArray.length; j += 1) {\n\t\t\ttokens = linesArray[j];\n\t\t\tconst date = tokens[0];\n\t\t\tconst countyName = tokens[1];\n\t\t\tconst stateName = tokens[2];\n\t\t\t// we don't use fips which is tokens[3]\n\t\t\tvar cases = parseInt(tokens[4], 10);\n\t\t\tvar deaths = parseInt(tokens[5], 10);\n\n\t\t\tif (countyName !== previousCounty || stateName !== previousState) {\n\t\t\t\tpreviousCounty = countyName;\n\t\t\t\tpreviousState = stateName;\n\t\t\t\tpreviousCases = 0;\n\t\t\t\tpreviousDeaths = 0;\n\t\t\t}\n\t\t\tvar pc = previousCases;\n\t\t\tvar pd = previousDeaths;\n\t\t\tpreviousCases = cases;\n\t\t\tpreviousDeaths = deaths;\n\t\t\tcases -= pc;\n\t\t\tdeaths -= pd;\n\n\t\t\tif (date > latestDate) latestDate = date;\n\n\t\t\tvar newItem = {date: date, cases: cases, deaths: deaths, cumulativeCases: previousCases, cumulativeDeaths: previousDeaths};\n\n\t\t\tthis.addToSeries(nationalSeries, newItem);\n\n\t\t\tstateData = statesData[stateName];\n\t\t\tif (!stateData) {\n\t\t\t\tstateData = {series: {timeline: [], cases: 0, deaths: 0}, countiesData: {}};\n\t\t\t\tstatesData[stateName] = stateData;\n\t\t\t}\n\t\t\tthis.addToSeries(stateData.series, newItem);\n\n\t\t\tvar countySeries = stateData.countiesData[countyName];\n\t\t\tif (!countySeries) {\n\t\t\t\tcountySeries = {timeline: [], cases: 0, deaths: 0};\n\t\t\t\tstateData.countiesData[countyName] = countySeries;\n\t\t\t}\n\t\t\tthis.addToSeries(countySeries, newItem);\n\t\t}\n\n\t\tfor (var stateName in statesData) {\n\t\t\tstateData = statesData[stateName];\n\t\t\tstateData.countiesData[CovidData.allCounties] = stateData.series;\n\t\t\tdelete stateData.series;\n\t\t\tfor (var b in stateData.countiesData) {\n\t\t\t\tthis.optimizeSeries(stateData.countiesData[b]);\n\t\t\t}\n\t\t}\n\t\tthis.optimizeSeries(nationalSeries);\n\t\tstatesData[CovidData.allStates] = {countiesData: {[CovidData.allCounties]: nationalSeries}};\n\t\tthis.callback(statesData, latestDate);\n\t}\n\n\t/*private*/ readBigDataFile(filepath) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.onreadystatechange = () => {\n\t\t\tif(xhr.readyState === XMLHttpRequest.DONE) {\n\t\t\t\tvar status = xhr.status;\n\t\t\t\tif (status === 0 || (status >= 200 && status < 400)) {\n\t\t\t\t\t// The request has been completed successfully\n\t\t\t\t\tthis.receivedBigDataFile(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\talert(\"Couldn't fetch data file: status\", status);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.open(\"GET\", filepath);\n\t\txhr.send();\n\t}\n}\n","import React from 'react';\n\nexport default class GestureHandler extends React.Component {\n    constructor(props) {\n        super(props);\n        this.enable(this.props.enabled);\n    }\n    // adapted from https://stackoverflow.com/questions/2264072/\n    // detect-a-finger-swipe-through-javascript-on-the-iphone-and-android\n    enabled = false;\n\n    enable(enabled) {\n        if (this.enabled === enabled) return;\n\n        if (enabled) {\n            window.addEventListener('touchstart', this.handleTouchStart, false);        \n            window.addEventListener('touchmove', this.handleTouchMove, false);\n        } else {\n            window.removeEventListener('touchstart', this.handleTouchStart, false);        \n            window.removeEventListener('touchmove', this.handleTouchMove, false);\n        }\n        this.enabled = enabled;\n    }\n\n    xDown = null;                                                        \n    yDown = null;\n\n    getTouches = (evt) => {\n      return evt.touches ||             // browser API\n             evt.originalEvent.touches; // jQuery\n    }                                                     \n\n    handleTouchStart = (evt) => {\n        const firstTouch = this.getTouches(evt)[0];                                      \n        this.xDown = firstTouch.clientX;                                      \n        this.yDown = firstTouch.clientY;                                      \n    };                                                \n\n    handleTouchMove = (evt) => {\n        if (!this.xDown || !this.yDown) {\n            return;\n        }\n\n        var xUp = evt.touches[0].clientX;                                    \n        var yUp = evt.touches[0].clientY;\n\n        var xDiff = this.xDown - xUp;\n        var yDiff = this.yDown - yUp;\n\n        if ( Math.abs(xDiff) > Math.abs(yDiff)) {/*most significant*/\n            if (xDiff > 0) {\n                this.props.onSwipeLeft && this.props.onSwipeLeft();\n            } else {\n                this.props.onSwipeRight && this.props.onSwipeRight();\n            }                       \n        } else {\n            if (yDiff > 0) {\n                this.props.onSwipeUp && this.props.onSwipeUp();\n            } else { \n                this.props.onSwipeDown && this.props.onSwipeDown();\n            }                                                                 \n        }\n\n        this.xDown = null;\n        this.yDown = null;                                             \n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.enable(this.props.enabled);\n    }\n\n    render() {\n        return <div/>\n    }\n}\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport { Dialog, DialogContent, Typography } from '@material-ui/core';\n\nexport default class LoadingDialog extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<Dialog open={this.props.open}\n\t\t\t\tPaperProps={{\n    \t\t\t\tstyle: {\n      \t\t\t\t\tbackgroundColor: 'transparent',\n      \t\t\t\t\tboxShadow: 'none',\n    \t\t\t\t}\n  \t\t\t\t}}>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80}/>\n\t\t\t\t\t{/* https://mhnpd.github.io/react-loader-spinner\n\t\t\t\t\t    https://www.npmjs.com/package/react-loader-spinner \n\t\t\t\t\t\tTailSpin Puff Grid ThreeDots */}\n\t\t\t\t\t<Typography variant=\"body2\">Fetching data...</Typography>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t)\n\t};\n}\n","import React from 'react';\nimport {Link} from '@material-ui/core';\nimport Analytics from './Analytics';\n\nexport default class MyLink extends React.Component {\n\thandleClick = () => {\n\t\tAnalytics.reportOutboundLink(this.props.href);\n\t}\n\n\trender() {\n\t\treturn <Link target={this.props.target} href={this.props.href} onClick={this.handleClick}>\n\t\t\t{this.props.children}\n\t\t</Link>\n\t}\n}\n","import React from 'react';\nimport { FormControl, Link, MenuItem, Select } from '@material-ui/core';\nimport './RegionMenu.css';\nimport Analytics from './Analytics';\n\nexport default class RegionMenu extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {selection: this.props.list.length > 0 ? this.props.list[0].name : \"\"};\n\t}\n\n\tlistsEqual(a, b) {\n\t\treturn (a.length === b.length) && (a.length === 0 || (a[0].name === b[0].name));\n\t}\n\n\tfindSelectedIndex() {\n\t\tfor (var i = 0; i < this.props.list.length; i += 1) {\n\t\t\tif (this.props.list[i].name === this.state.selection) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n\t}\n\n\tselect = (name) => {\n\t\tthis.setState({selection: name});\n\t\tthis.props.onSelected(name);\n\t}\n\n\thandleDownClick = (e) => {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index < this.props.list.length - 1) {\n\t\t\tindex += 1;\n\t\t}\n\t\tthis.select(this.props.list[index].name);\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandleUpClick = (e) => {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index > 0) {\n\t\t\tindex -= 1;\n\t\t}\n\t\tthis.select(this.props.list[index].name);\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandleSelectChanged = (e) => {\n\t\tthis.select(e.currentTarget.textContent);\n\t\tAnalytics.menuSelection();\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.props.onSelected(this.state.selection);\n\t}\n\n\tcomponentDidUpdate = (prevProps, prevState, snapshot) => {\n\t\tif (!this.listsEqual(prevProps.list, this.props.list)) {\n\t\t\tthis.select(this.props.list[0].name);\t\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (<div>\n\t\t\t<FormControl>\n\t\t        <Select\n\t\t        \tclassName=\"regionMenu\"\n\t\t        \tlabelId=\"demo-simple-select-label\"\n\t\t        \tid=\"demo-simple-select\"\n\t\t        \tvalue={this.state.selection}\n\t\t        \tonChange={this.handleSelectChanged}\n\t\t        >\n\t\t        \t{this.props.list.map((item) => {\n\t\t\t\t\t\treturn <MenuItem key={item.name} value={item.name}>{item.name}</MenuItem>\n\t\t\t\t    })}\n\t\t        </Select>\n\t\t    </FormControl>\n\t\t</div>);\n\t}\n}\n","import React from 'react';\nimport { \n\tLink,\n\tTable,\n\tTableHead,\n\tTableBody,\n\tTableRow,\n\tTableCell,\n\tTableContainer\n} from '@material-ui/core';\nimport Analytics from './Analytics';\nimport './RegionTable.css';\n\nconst slimStyle = {height: \"0px\", padding: \"0px\"};\n\nexport default class RegionTable extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.selectedIndex = 0;\n\t\tthis.state = {\n\t\t\tselection: this.props.list[this.selectedIndex].name,\n\t\t\tlist: this.createSortedList(\"cases\", false), \n\t\t\tsortBy: \"cases\",\n\t\t\tsortAscending: false\n\t\t};\n\t    this.handleCellClick = this.handleCellClick.bind(this);\t\t\n\t    this.select = this.select.bind(this);\t\t\n\t    this.handleNextClick = this.handleNextClick.bind(this);\t\t\n\t    this.handlePrevClick = this.handlePrevClick.bind(this);\t\t\n\t    this.toggleSort = this.toggleSort.bind(this);\n\t    this.selectedRef = React.createRef();\n\t    this.tableContainerRef = React.createRef();\n\t}\n\n\tsortArray(array, property, numeric, ascending) {\n\t\tvar newArray = [];\n\t\tfor (var i = 0; i < array.length; i += 1) {\n\t\t\tnewArray.push(Object.assign({}, array[i]));\n\t\t}\n\n\t\tif (!numeric) {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\tif (a[property] < b[property]) {\n\t\t\t\t\treturn ascending ? -1 : 1;\n\t\t\t\t} else if (a[property] > b[property]) {\n\t\t\t\t\treturn ascending ? 1 : -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\treturn ascending ? a[property] - b[property] : b[property] - a[property];\n\t\t\t});\n\t\t}\n\t\treturn newArray;\n\t}\n\n\tselect(name) {\n\t\tthis.setState({selection: name});\n\t\tthis.props.onSelected(name);\n\t}\n\n\thandleCellClick(e, name) {\n\t\tAnalytics.itemSelected(this.props.title, name);\n\t\tthis.select(name);\n\t}\n\n\tfindSelectedIndex() {\n\t\tfor (var i = 0; i < this.state.list.length; i += 1) {\n\t\t\tif (this.state.list[i].name === this.state.selection) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n \t\t// alert(\"error\");\n\t}\n\n\thandleNextClick(e) {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index < this.state.list.length - 1) {\n\t\t\tindex += 1;\n\t\t}\n\t\tthis.select(this.state.list[index].name);\t\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandlePrevClick(e) {\n\t\tlet index = this.findSelectedIndex();\n\t\tif (index > 0) {\n\t\t\tindex -= 1;\n\t\t}\n\t\tthis.select(this.state.list[index].name);\t\n\t\tAnalytics.arrowClicked();\n\t}\n\n\ttoggleSort() {\n\t\tif (this.state.sortBy === \"cases\") {\n\t\t\tthis.setState({sortBy: \"name\", sortAscending: true});\n\t\t} else {\n\t\t\tthis.setState({sortBy: \"cases\", sortAscending: false});\n\t\t}\n\t}\n\n\tcreateSortedList(sortBy, ascending) {\n\t\tif (sortBy === \"cases\") {\n\t\t\treturn this.sortArray(this.props.list, \"cases\", true, ascending);\n\t\t} else {\n\t\t\treturn this.sortArray(this.props.list, \"name\", false, ascending);\n\t\t}\n\t}\n\n\tensureSelectionVisible() {\n\t\tconst container = this.tableContainerRef.current;\n\t\tconst row = this.selectedRef.current;\n\t\tif (!row) return;\n\t\tconst containerVisibleHeight = container.scrollHeight - container.scrollTopMax;\n\t\tconst rowBottom = row.offsetTop + row.offsetHeight;\n\t\tif (rowBottom < (container.scrollTop + containerVisibleHeight) && (row.offsetTop - row.offsetHeight) > container.scrollTop) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.selectedRef.current.scrollIntoView();\n\t\tif (container.scrollTop < (row.offsetTop + 100) && container.scrollTop !== container.scrollTopMax) {\n\t\t\tthis.tableContainerRef.current.scrollBy(0, -100);\n\t\t}\n\t}\n\n\tlistsEqual(a, b) {\n\t\treturn (a.length === b.length) && (a.length === 0 || (a[0].name === b[0].name));\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\n\t\tvar listChanged = !this.listsEqual(prevProps.list, this.props.list);\n\t\tif ((prevState.sortBy !== this.state.sortBy) || (prevState.sortAscending !== this.state.sortAscending) || listChanged) {\n\t\t\tthis.setState({list: this.createSortedList(this.state.sortBy, this.state.sortAscending)});\n\t\t}\n\t\tif (listChanged) {\n\t\t\tthis.selectedIndex = 0;\n\t\t\tthis.select(this.state.list[this.selectedIndex].name);\t\n\t\t}\n\t\tthis.ensureSelectionVisible();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.props.onSelected(this.state.selection);\n\t}\n\n\trender() {\n\t\tvar tableClasses = `tableContainer ${this.props.extra}`;\n\t\treturn (<div className=\"tableRoot\">\n\t\t\t<div className=\"forwardBackButtons\">\n\t\t\t\t<Link href=\"#\" onClick={this.handlePrevClick}>◀</Link>\n\t\t\t\t&nbsp;\n\t\t\t\t<Link href=\"#\" onClick={this.handleNextClick}>▶</Link>\n\t\t\t</div>\n\t\t\t<TableContainer ref={this.tableContainerRef} className={tableClasses}>\n\t\t\t\t<Table stickyHeader style={slimStyle} size=\"small\">\n\t\t\t\t\t<TableHead>\n            \t\t\t<TableRow>\n              \t\t\t\t<TableCell style={slimStyle} onClick={this.toggleSort} align=\"left\">{this.props.title}{this.state.sortBy === \"name\" ? \"▲\" : \"\"}</TableCell>\n              \t\t\t\t<TableCell style={slimStyle} onClick={this.toggleSort} align=\"right\">{this.state.sortBy === \"cases\" ? \"▼\" : \"\"}Cases</TableCell>\n            \t\t\t</TableRow>            \n     \t\t\t\t</TableHead>\n\n\t\t\t\t\t<TableBody>\n\t  \t\t\t\t\t{this.state.list.map((item) => {\n\t  \t\t\t\t\t\tvar selected = item.name === this.state.selection;\n\n\t\t\t\t\t  \t\treturn <TableRow ref={selected ? this.selectedRef : null} selected={selected} key={item.name} onClick={this.props.itemClick}>\n\t\t\t\t\t\t\t\t<TableCell style={slimStyle} align=\"left\" onClick={(e) => this.handleCellClick(e, item.name)}>{item.name}</TableCell>\n\t\t\t\t\t\t\t\t<TableCell style={slimStyle} align=\"right\" onClick={(e) => this.handleCellClick(e, item.name)}>{item.cases}</TableCell>\n\t\t\t\t  \t\t\t</TableRow>\n\t\t\t\t\t    })}\n\t\t\t\t\t</TableBody>\n\t\t\t\t</Table>\n\t\t\t</TableContainer>\n\t\t</div>);\n\t}\n}\n","import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Checkbox, FormControlLabel, Link, Slider, Typography } from '@material-ui/core';\nimport Analytics from './Analytics';\nimport \"./SeriesChart.css\";\n\nclass SeriesChart extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props);\n\t\tthis.chartRef = React.createRef();\n\t\tthis.state = {type: \"linear\", movingAverageDays: 1, cumulative: false, smooth: false};\n\t\tthis.datasets = [];\n\t}\n\n\tcalcMovingAverage(array, number) {\n\t\tvar half = Math.floor(this.state.movingAverageDays / 2);\n\t\tvar result = [];\n\t\tvar i;\n\t\tfor (i = 0; i < half; i += 1) {\n\t\t\tresult.push(array[i]);\n\t\t}\n\t\tfor (i = half; i < array.length; i += 1) {\n\t\t\tvar sum = 0;\n\t\t\tfor (var j = 0; j < number; j += 1) {\n\t\t\t\tvar ind = Math.min(array.length - 1, i + half - j);\n\t\t\t\tsum += array[ind];\n\t\t\t}\n\t\t\tresult.push(sum / number);\n\t\t}\n\t\treturn result;\n\t}\n\n\tisHidden = {\n\t\t0: false,\n\t\t1: false,\n\t\t2: false,\n\t\t3: false,\n\t\t4: false,\n\t\t5: false\n\t};\n\n\tfindMin(array) {\n\t\tlet min = Number.POSITIVE_INFINITY;\n\t\tfor (let i = 0; i < array.length; i += 1) {\n\t\t\tmin = Math.min(min, array[i]);\n\t\t}\n\t\treturn min;\n\t}\n\n\tfindMax(array) {\n\t\tlet max = Number.NEGATIVE_INFINITY;\n\t\tfor (let i = 0; i < array.length; i += 1) {\n\t\t\tmax = Math.max(max, array[i]);\n\t\t}\n\t\treturn max;\n\t}\n\n\tcreateChartData (series, cumulative, smooth) {\n\t\tvar labels = [];\n\t\tvar casesData = [];\n\t\tvar deathsData = [];\n\t\tvar cumulativeCasesData = [];\n\t\tvar cumulativeDeathsData = [];\n\t\tfor (var i = 0; i < series.timeline.length; i += 1) {\n\t\t\tvar item = series.timeline[i];\n\t\t\tlabels.push(item.date.replace(/2020-/, \"\"));\n\t\t\tcasesData.push(item.cases);\n\t\t\tdeathsData.push(item.deaths);\n\t\t\tcumulativeCasesData.push(item.cumulativeCases);\n\t\t\tcumulativeDeathsData.push(item.cumulativeDeaths);\n\t\t}\n\n\t\tconst datasetLabels = [\n\t\t\t\"Cumulative Cases\", \"Cumulative Deaths\", \"Daily New Cases\", \n\t\t\t`Daily New Cases ${this.state.movingAverageDays}-day Average`, \"Daily Deaths\",\n\t\t\t`Daily Deaths ${this.state.movingAverageDays}-day Average`];\n\n\t\tthis.minY = undefined;\n\t\tthis.maxY = undefined;\n\n\t\tif (cumulative) {\n\t\t\tthis.datasets = [\n\t\t\t\t{\n\t\t\t\t\tmyId: 0,\n\t\t\t\t\tlabel: datasetLabels[0],\n\t\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\t\tborderColor: 'rgba(75,75,192,0.5)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[0],\n\t\t\t\t\tdata: cumulativeCasesData\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmyId: 1,\n\t\t\t\t\tlabel: datasetLabels[1],\n\t\t\t\t\tbackgroundColor: \"#333333\",\n\t\t\t\t\tborderColor: 'rgba(75,150,75,0.5)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[1],\n\t\t\t\t\tdata: cumulativeDeathsData\n\t\t\t\t}\n\t\t\t];\n\n\t\t} else if (smooth) {\n\t\t\tthis.datasets = [\n\t\t\t\t{\n\t\t\t\t\tmyId: 3,\n\t\t\t\t\tlabel: datasetLabels[3],\n\t\t\t\t\tbackgroundColor: \"#aaaaaa\",\n\t\t\t\t\tborderColor: 'rgba(75,75,192,0.3)',\n\t\t\t\t\tborderWidth: 4,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[3],\n\t\t\t\t\tdata: this.calcMovingAverage(casesData, this.state.movingAverageDays),\n\t\t\t\t\torigData: casesData\n\t\t\t\t},\t\t\t\n\t\t\t\t{\n\t\t\t\t\tmyId: 5,\n\t\t\t\t\tlabel: datasetLabels[5],\n\t\t\t\t\tborderColor: 'rgba(75,150,75,0.3)',\n\t\t\t\t\tborderWidth: 4,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[5],\n\t\t\t\t\tdata: this.calcMovingAverage(deathsData, this.state.movingAverageDays),\n\t\t\t\t\torigData: deathsData\n\t\t\t\t}\n\t\t\t];\n\n\t\t\tif (!this.isHidden[3] && !this.isHidden[5]) {\n\t\t\t\tthis.minY = Math.min(this.findMin(casesData), this.findMin(deathsData));\n\t\t\t\tthis.maxY = Math.max(this.findMax(casesData), this.findMax(deathsData));\n\t\t\t}\n\n\t\t} else {\n\t\t\tthis.datasets = [\n\t\t\t\t{\n\t\t\t\t\tmyId: 2,\n\t\t\t\t\tlabel: datasetLabels[2],\n\t\t\t\t\tbackgroundColor: \"#aaaaaa\",\n\t\t\t\t\tborderColor: 'rgba(75,75,192,0.7)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[2],\n\t\t\t\t\tdata: casesData\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tmyId: 4,\n\t\t\t\t\tlabel: datasetLabels[4],\n\t\t\t\t\tbackgroundColor: \"#aaaaaa\",\n\t\t\t\t\tborderColor: 'rgba(75,150,75,0.7)',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t\tfill: false,\n\t\t\t\t\thidden: this.isHidden[4],\n\t\t\t\t\tdata: deathsData\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\n\t\treturn {labels: labels, datasets: this.datasets};\n\t}\n\n\thandleLogChanged = () => {\n\t\tAnalytics.linearLogToggleClicked();\n\t\tthis.setState({type: (this.state.type === \"logarithmic\") ? \"linear\" : \"logarithmic\"});\n\t}\n\n\thandleCumulativeChanged = (event) => {\n\t\tthis.setState({cumulative: event.target.checked});\n\t}\n\n\thandleChartClick = () => {\n\t\tsetTimeout(() => {\n\t\t\tfor (var i = 0; i < this.datasets.length; i += 1) {\n\t\t\t\tconst hidden = !this.chartRef.current.chartInstance.isDatasetVisible(i);\n\t\t\t\tif (hidden !== this.isHidden[this.datasets[i].myId]) {\n\t\t\t\t\tAnalytics.hideShowDatasetClicked();\n\t\t\t\t\tthis.isHidden[this.datasets[i].myId] = hidden;\n\t\t\t\t}\n\t\t\t}\n\t\t}, 200)\n\t}\n\n\thandleSliderChanged = (e, value) => {\n\t\tthis.setState({movingAverageDays: value, smooth: value !== 1});\n\t}\n\n\thandleSmoothChanged = (event) => {\n\t\tthis.setState({movingAverageDays: 5, smooth: event.target.checked});\n\t}\n\n\trender() {\n\t\tconst chartData = this.props.series && this.createChartData(\n\t\t\tthis.props.series, this.state.cumulative, this.state.smooth);\n\n\t    const options = {\n\t\t\tanimation: {\n\t\t\t\tduration: 0\n\t\t\t},\n\t\t\tresponsive: true,\n\t\t\tmaintainAspectRatio: true,\n\t\t\taspectRatio: 1.5,\n\t\t\tonClick: this.handleChartClick, // FYI there is also onResize, onComplete, onHover, before/afterUpdate\n\t\t\tlegend: {position: this.props.small ? \"bottom\" : \"top\"},\n\t\t\ttitle: {display: this.props.title !== \"\", text: this.props.title, fontSize: \"16\"},\n\t\t\tlayout: this.props.small ? {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 50\n\t\t\t\t}\n\t\t\t} : undefined,\n\t\t\tscales: {\n\t\t\t\txAxes: [{\n\t\t\t\t\tdisplay: true\n\t\t\t\t}],\n\t\t\t\tyAxes: [{\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\ttype: this.state.type,\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsuggestedMin: this.minY, // minY and maxY are computed by createChartData()\n\t\t\t\t\t\tsuggestedMax: this.maxY,\n\t\t\t\t\t\tcallback: function(value, index, values) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t}\n\t\t};\n\n\t\tconst checkboxLabelPlacement = this.props.small ? \"start\" : undefined;\n\t\treturn (<div className=\"chartRoot\">\n\t\t\t<div className={this.props.small ? \"smallChartControls\" : \"bigChartControls\"}>\n\t\t\t\t<FormControlLabel labelPlacement={checkboxLabelPlacement} className=\"log\" control={<Checkbox size=\"small\" color=\"default\"/>} value={this.state.type === \"logarithmic\"} label=\"Log\" onChange={this.handleLogChanged}/>\n\t\t\t\t<FormControlLabel labelPlacement={checkboxLabelPlacement} className=\"cumulative\" control={<Checkbox size=\"small\" color=\"default\"/>} value={this.state.cumulative} label=\"Cumulative\" onChange={this.handleCumulativeChanged}/>\n\n\t\t\t\t{this.props.small && <Link className=\"appTitle\" onClick={this.props.onTitleClick}><Typography variant=\"h6\">{this.props.appTitle}</Typography></Link>}\n\t\t\t\t{this.props.small && <Typography variant=\"subtitle2\" className=\"updateDate\">Updated {this.props.updateDate}</Typography>}\n\n\t\t\t\t{this.props.small && <FormControlLabel\n\t\t\t\t\tlabelPlacement={checkboxLabelPlacement}\n\t\t\t\t\tclassName=\"smooth\"\n\t\t\t\t\tcontrol={<Checkbox size=\"small\" color=\"default\"/>} \n\t\t\t\t\tvalue={this.state.smooth}\n\t\t\t\t\tlabel=\"Smooth\"\n\t\t\t\t\tdisabled={this.state.cumulative}\n\t\t\t\t\tonChange={this.handleSmoothChanged}/>}\n\n\t\t\t\t{!this.props.small && <Typography className=\"label\" disabled={this.state.cumulative}>Smooth</Typography>}\n\t\t\t\t{!this.props.small && <Slider\n\t\t\t\t\tclassName=\"slider\"\n\t\t\t\t\tdisabled={this.state.cumulative}\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={5}\n\t\t\t\t\tstep={2}\n\t\t\t\t\ttrack=\"inverted\"\n\t\t\t\t\tdefaultValue={1}\n\t\t\t\t\tonChange={this.handleSliderChanged}\n\t\t\t\t/>}\n\t\t\t\t{this.props.children}\n\t\t\t</div>\n\t\t\t{this.props.series && <Line ref={this.chartRef} options={options} data={chartData}/>}\n\t\t</div>)\n\t}\n}\t\n\nexport default SeriesChart;\n","export default class Utils {\n\tstatic sortArray(array, property, numeric, ascending) {\n\t\tvar newArray = [];\n\t\tfor (var i = 0; i < array.length; i += 1) {\n\t\t\tnewArray.push(Object.assign({}, array[i]));\n\t\t}\n\n\t\tif (!numeric) {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\tif (a[property] < b[property]) {\n\t\t\t\t\treturn ascending ? -1 : 1;\n\t\t\t\t} else if (a[property] > b[property]) {\n\t\t\t\t\treturn ascending ? 1 : -1;\n\t\t\t\t} else {\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tnewArray.sort(function(a, b) {\n\t\t\t\treturn ascending ? a[property] - b[property] : b[property] - a[property];\n\t\t\t});\n\t\t}\n\t\treturn newArray;\n\t}\n\n\tstatic findIndex(list, name) {\n\t\tfor (var i = 0; i < list.length; i += 1) {\n\t\t\tif (list[i].name === name) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n \t\t// alert(\"error\");\n\t}\n\n\tstatic listsEqual(a, b) {\n\t\treturn (a.length === b.length) && (a.length === 0 || (a[0].name === b[0].name));\n\t}\n}\n","import React from 'react';\nimport { Slider, Tooltip, Typography } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useEffect, useRef } from \"react\";\nimport preval from 'preval.macro'\n\nimport AboutDialog from './AboutDialog';\nimport Analytics from './Analytics';\nimport CovidData from './CovidData';\nimport GestureHandler from './GestureHandler';\nimport LoadingDialog from './LoadingDialog';\nimport MyLink from './MyLink';\nimport RegionMenu from './RegionMenu';\nimport RegionTable from './RegionTable';\nimport SeriesChart from './SeriesChart';\nimport Utils from './Utils';\n\nimport './App.css';\n\nconst development = window.location.toString().match(/(localhost|covid-test)/)\nAnalytics.enable(!development);\n\nconst MyTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 15,\n  },\n}))(Tooltip);\n\n// FormatSliderValue source code comes from https://github.com/mui-org/material-ui/issues/17905\nconst FormatSliderValue = props => {\n  const { children, value, open } = props;\n\n  const popperRef = useRef(null);\n  useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <MyTooltip\n      open={open}\n      title={value}\n      placement=\"top\"\n      PopperProps={{ popperRef }}\n    >\n     \t{children}\n    </MyTooltip>\n  );\n};\n\n\nclass App extends React.Component {\n\t/* this.state = \n\t\t{\n\t\t\tdateList,\n\t\t\tstatesData,\n\t\t\tstatesList,\n\t\t\tselectedState,\n\t\t\tselectedCounty,\n\t\t\taboutOpen\n\t \t}\n\t*/\n\n\tconstructor(props) {\t\n\t\tsuper(props);\n\t\tthis.calcStatesList = this.calcStatesList.bind(this);\t\t\n\t\tthis.calcCountiesList = this.calcCountiesList.bind(this);\t\t\n\t\tthis.handleStateSelected = this.handleStateSelected.bind(this);\t\t\n\t\tthis.handleCountySelected = this.handleCountySelected.bind(this);\t\n\t\tthis.handleSliderChanged = this.handleSliderChanged.bind(this);\t\n\t\tthis.handleSliderCommited = this.handleSliderCommited.bind(this);\t\n\t\tthis.trimToStartDate = this.trimToStartDate.bind(this);\t\n\t\tthis.mql = window.matchMedia(\"(max-width: 999px)\"); // https://medium.com/better-programming/how-to-use-media-queries-programmatically-in-react-4d6562c3bc97\n\t\tvar small = this.mql.matches;\n\t\tthis.state = {startDate: \"2020-03-01\", small: small, aboutOpen: false, isLoading: true,\n\t\t\tselectedState: CovidData.allStates, selectedCounty: CovidData.allCounties};\n\t}\n\n\tcalcStatesList(statesData) {\n\t\tconst result = [];\n\t\tconst keys = Object.keys(statesData).sort();\n\t\tfor (var i = 0; i < keys.length; i += 1) {\n\t\t\tconst stateName = keys[i];\n\t\t\tconst stateData = statesData[stateName];\n\t\t\tresult.push({name: stateName, cases: stateData.countiesData[CovidData.allCounties].cases});\n\t\t}\n\t\treturn result;\n\t}\n\n\tcalcAllStatesCountiesList(statesData) {\n\t\tvar result = {};\n\t\tfor (const stateName in statesData) {\n\t\t\tconst stateData = statesData[stateName];\n\t\t\tif (stateName === CovidData.allStates) continue;\n\t\t\tconst countyNames = Object.keys(stateData.countiesData);\n\t\t\tfor (var i = 0; i < countyNames.length; i += 1) {\n\t\t\t\tvar countyName = countyNames[i];\n\t\t\t\tif (countyName !== CovidData.allCounties) {\n\t\t\t\t\tconst cases = stateData.countiesData[countyName].cases;\n\t\t\t\t\twhile (result[countyName]) {\n\t\t\t\t\t\tcountyName = countyName + \" 2\";\n\t\t\t\t\t}\n\t\t\t\t\tresult[countyName] = {name: countyName, cases: cases};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn Utils.sortArray(Object.values(result), \"name\", false, true);\n\t}\n\n\tcalcCountiesList(statesData, stateName) {\n\t\t// if (stateName === CovidData.allStates) {\n\t\t// \treturn this.calcAllStatesCountiesList(statesData);\n\t\t// }\n\n\t\tconst stateData = statesData[stateName];\n\t\tconst result = [];\n\t\tconst keys = Object.keys(stateData.countiesData).sort();\n\t\tfor (var i = 0; i < keys.length; i += 1) {\n\t\t\tconst countyName = keys[i];\n\t\t\tconst countyData = stateData.countiesData[countyName];\n\t\t\tresult.push({name: countyName, cases: countyData.cases});\n\t\t}\n\t\treturn result;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst path = \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\";\n\t\tthis.covidData = new CovidData(path, (statesData, latestDate) => {\n\t\t\tvar nationalTimeline =\n\t\t\t\tstatesData[CovidData.allStates].countiesData[CovidData.allCounties].timeline;\n\t\t\tthis.setState({\n\t\t\t\tdateList: nationalTimeline.map((item) => item.date),\n\t\t\t\tstatesData: statesData,\n\t\t\t\tstatesList: this.calcStatesList(statesData),\n\t\t\t\tlatestDate: latestDate,\n\t\t\t\tisLoading: false\n\t\t\t});\n\t\t});\n\t\tthis.mql.addListener(() => {\n\t\t\tthis.setState({small: this.mql.matches});\n\t\t});\n\t}\n\n\tsliderRef = React.createRef();\n\tstateMenuRef = React.createRef();\n\tcountyMenuRef = React.createRef();\n\n\thandleStateSelected(stateName) {\n\t\tthis.setState({selectedState: stateName});\n\t}\n\n\thandleCountySelected(countyName) {\n\t\tthis.setState({selectedCounty: countyName});\n\t}\n\n\thandleSliderChanged(e, value) {\n\t\tthis.setState({startDate: this.state.dateList[value]});\n\t}\n\n\thandleSliderCommited(e, value) {\n\t\tAnalytics.dateSliderUsed();\n\t}\n\n\thandleStateSelectChanged = (e) => {\n\t\tthis.handleStateSelected(e.currentTarget.textContent);\n\t}\n\n\thandleCountySelectChanged = (e) => {\n\t\tthis.handleCountySelected(e.currentTarget.textContent);\n\t}\n\n\tfindDateIndex(date) {\n\t\tvar result = this.state.dateList.findIndex((element) => { \n\t\t\tvar x = element === date;\n\t\t\treturn x;\n\t\t});\n\t\treturn result;\n\t}\n\n\ttrimToStartDate(startDate, series) {\n\t\tif (!series || !series.timeline || series.timeline.length === 0) {\n\t\t\treturn series;\n\t\t}\n\t\tfor(var i = 0; i < series.timeline.length; i += 1) {\n\t\t\tif (startDate <= series.timeline[i].date) {\n\t\t\t\tvar result = Object.assign({}, series);\n\t\t\t\tresult.timeline = series.timeline.slice(i);\n\t\t\t\tvar desiredIndex = this.findDateIndex(startDate);\n\t\t\t\tvar currentIndex = this.findDateIndex(result.timeline[0].date);\n\t\t\t\twhile(desiredIndex < currentIndex) {\n\t\t\t\t\tcurrentIndex -= 1;\n\t\t\t\t\tresult.timeline.unshift(\n\t\t\t\t\t\t{date: this.state.dateList[currentIndex], cases: 0, deaths: 0});\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn series;\n\t}\n\n\tfindSelectedCountyIndex() {\n\t\tfor (var i = 0; i < this.countiesList.length; i += 1) {\n\t\t\tif (this.countiesList[i].name === this.state.selectedCounty) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n\t}\n\t\n\tfindSelectedStateIndex() {\n\t\tfor (var i = 0; i < this.state.statesList.length; i += 1) {\n\t\t\tif (this.state.statesList[i].name === this.state.selectedState) {\n\t\t\t\treturn i;\n\t\t\t}\n \t\t}\n\t}\n\n\thandleCountyDownClick = (e) => {\n\t\tlet index = this.findSelectedCountyIndex();\n\t\tif (index < this.countiesList.length - 1) {\n\t\t\tindex += 1;\n\t\t}\n\t\tthis.handleCountySelected(this.countiesList[index].name);\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandleCountyUpClick = (e) => {\n\t\tlet index = this.findSelectedCountyIndex();\n\t\tif (index > 0) {\n\t\t\tindex -= 1;\n\t\t}\n\t\tthis.handleCountySelected(this.countiesList[index].name);\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandleStateDownClick = (e) => {\n\t\tlet index = this.findSelectedStateIndex();\n\t\tif (index < this.state.statesList.length - 1) {\n\t\t\tindex += 1;\n\t\t}\n\t\tthis.handleStateSelected(this.state.statesList[index].name);\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandleStateUpClick = (e) => {\n\t\tlet index = this.findSelectedStateIndex();\n\t\tif (index > 0) {\n\t\t\tindex -= 1;\n\t\t}\n\t\tthis.handleStateSelected(this.state.statesList[index].name);\n\t\tAnalytics.arrowClicked();\n\t}\n\n\thandleAboutCloseButton = (e) => {\n\t\tthis.setState({aboutOpen: false})\n\t}\n\n\thandleTitleClick = (e) => {\n\t\tthis.setState({aboutOpen: true})\n\t}\n\n\thandleSwipeLeft = (e) => {\n\t\tthis.countyMenuRef.current.handleDownClick();\n\t}\n\n\thandleSwipeRight = (e) => {\n\t\tthis.countyMenuRef.current.handleUpClick();\n\t}\n\n\thandleSwipeDown = (e) => {\n\t\tthis.stateMenuRef.current.handleUpClick();\n\t}\n\n\thandleSwipeUp = (e) => {\n\t\tthis.stateMenuRef.current.handleDownClick();\n\t}\n\n\trender() {\n\t\tvar aboutInfo = <React.Fragment>\n\t\t\t<div className=\"notesText\">\n\t\t\t\t<p>Created by \n\t\t\t\t<MyLink target=\"_blank\" href=\"mailto:markcharts591@gmail.com\"> Mark Shepherd</MyLink>.\n\t\t\t\tData provided by the <MyLink target=\"_blank\" href=\"https://github.com/nytimes/covid-19-data\"> New York Times</MyLink>.\n\t\t\t\tSource code is <MyLink target=\"_blank\" href=\"https://github.com/markshepherd/CovidStats\"> here</MyLink>.\n\t\t\t\t<br/>\n\t\t\t\t<Typography variant=\"caption\">{development ? \"DEV \" : \"\"}Website build {preval`module.exports = new Date().toLocaleString();`}</Typography>\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"socialIcons\">\n\t\t\t\t<MyLink target=\"_blank\" href=\"https://twitter.com/MarkEShepherd\">\n\t\t\t\t \t<img className=\"socialIcon\"\n\t\t\t\t \t\talign=\"right\"\n\t\t\t\t \t\talt=\"Go to Mark's Twitter\"\n\t\t\t\t  \t\tsrc=\"Twitter_Social_Icon_Circle_Color.svg\"/>\n\t\t\t\t</MyLink>\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n                <MyLink target=\"_blank\" href=\"https://larkdales.com\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 52 52\"\n                    className=\"socialIcon\" align=\"right\" alt=\"Visit the Larkdales\">\n                         <path d=\"M26.451.526C12.155.526.565 12.116.565 26.412s11.59 25.886 25.886 25.886 25.886-11.59 25.886-25.886S40.748.526 26.451.526zM40.005 27.14h-2.689v9.918c0 .718-.026 1.299-1.014 1.299h-6.574V28.41h-6.554v9.947h-6.263c-1.295 0-1.326-.581-1.326-1.299V27.14h-2.689c-.96 0-1.206-.56-.547-1.244l12.903-12.915a1.659 1.659 0 012.399 0l12.902 12.915c.659.684.413 1.244-.548 1.244z\"></path></svg>\n                </MyLink>\n\t\t\t</div>\n\n\t\t\t<div className=\"dateControl\">\n\t\t\t\t<span>Choose starting date of graph...</span>\n\t\t\t\t{this.state.dateList && <Slider\n\t\t\t\t\tref={this.sliderRef}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={this.state.dateList.length - 1}\n\t\t\t\t\ttrack=\"inverted\"\n\t\t\t\t\tdefaultValue={this.findDateIndex(\"2020-03-01\")}\n\t\t\t\t\tonChange={this.handleSliderChanged}\n\t\t\t\t\tonChangeCommitted={this.handleSliderCommited}\n\t\t\t\t\tvalueLabelDisplay=\"auto\"\n\t\t\t\t\t\tvalueLabelFormat={(index) => this.state.dateList[index]}\t\n\t\t\t\t\t\tValueLabelComponent={FormatSliderValue}\n\t\t\t\t/>}\n\t\t\t</div>\n\t\t</React.Fragment>;\n\n\t\tconst chartTitle = this.state.small\n\t\t\t? \"\"\n\t\t\t: (this.state.selectedCounty === CovidData.allCounties) \n\t\t\t\t? this.state.selectedState + \",\" + this.state.selectedCounty\n\t\t\t\t: this.state.selectedState + \", \" + this.state.selectedCounty + \" county\";\n\n\t\tif (this.state.statesData && this.state.selectedState) {\n\t\t\tthis.countiesList = this.calcCountiesList(this.state.statesData, this.state.selectedState);\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"app\"> \n\t\t\t\t{!this.state.small && <div className=\"header\">\n\t\t\t\t\t<span className=\"myheader\">Covid-19 Statistics by U.S. State and County</span>\n\t\t\t\t\t<br/>\n\t\t\t\t\tUpdated {this.state.latestDate}\n\t\t\t\t</div>}\n\n\t\t\t\t{!this.state.small && this.state.statesList && <div className=\"state\">\n\t\t\t\t\t<RegionTable extra=\"color1\" title=\"State\"\n\t\t\t\t\t\tlist={this.state.statesList} onSelected={this.handleStateSelected}/></div>}\n\n\t\t\t\t{!this.state.small && this.state.statesData && this.state.selectedState && <div className=\"county\">\n\t\t\t\t\t<RegionTable extra=\"color2\" title=\"County\"\n\t\t\t\t\t\tlist={this.countiesList}\n\t\t\t\t\t\tonSelected={this.handleCountySelected}/></div>}\n\n\t\t\t\t{this.state.selectedCounty && this.state.statesData && <div className=\"chart\">\n\t\t\t\t\t<SeriesChart\n\t\t\t\t\t\tsmall={this.state.small}\n\t\t\t\t\t\tappTitle=\"Covid-19 by US State/County\"\n\t\t\t\t\t\tonTitleClick={this.handleTitleClick}\n\t\t\t\t\t\tupdateDate={this.state.latestDate}\n\t\t\t\t\t\ttitle={chartTitle}\n\t\t\t\t\t\tseries={this.trimToStartDate(this.state.startDate, this.state.statesData[this.state.selectedState].countiesData[this.state.selectedCounty])}>\n\n\t\t\t\t\t\t{this.state.small && this.state.selectedState && this.state.statesData && <div className=\"stateSelector\">\n\t\t\t\t\t\t\t<RegionMenu ref={this.stateMenuRef} list={this.state.statesList} onSelected={this.handleStateSelected}/>\n\t\t\t\t\t\t</div>}\n\n\t\t\t\t\t\t{this.state.small && this.state.selectedCounty && this.state.statesData && <div className=\"countySelector\">\n\t\t\t\t\t\t\t<RegionMenu ref={this.countyMenuRef} list={this.countiesList} onSelected={this.handleCountySelected}/>\n\t\t\t\t\t\t</div>}\n\t\t\t\t\t</SeriesChart>\n\t\t\t\t</div>}\n\n\n\t\t\t\t{!this.state.small && <div className=\"notes notesContainer\">\n\t\t\t\t\t{aboutInfo}\t\t\t\t\t\n\t\t\t\t</div>}\n\n\t\t\t\t{/*{this.state.isLoading && <LoadingDialog open={this.state.isLoading}/>}*/}\n\n\t\t\t\t{this.state.aboutOpen && <AboutDialog open={this.state.aboutOpen} onCloseButton={this.handleAboutCloseButton}>\n\t\t\t\t\t<div className=\"notesContainer\">\n\t\t\t\t\t{aboutInfo}\n\t\t\t\t\t</div>\n\t\t\t\t</AboutDialog>}\n\n\t\t\t\t{/*<GestureHandler enabled={this.state.small}\n\t\t\t\t\tonSwipeLeft={this.handleSwipeLeft} onSwipeRight={this.handleSwipeRight}\n\t\t\t\t\tonSwipeDown={this.handleSwipeDown} onSwipeUp={this.handleSwipeUp}\n\t\t\t\t/>*/}\n\t\t\t</div>);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\nimport { ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({typography: {fontSize: 12}});\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<ThemeProvider theme={theme}>\n\t    <App />\n\t</ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}